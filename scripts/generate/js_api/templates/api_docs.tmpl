# API

## Table Of Contents

 - [Generic Params](#generic-params)
 - [Methods](#methods)<%

function esc(str) {
  return str.replace(/\|/g, '&#124;');
}

var _paramWithDefault = paramWithDefault;
paramWithDefault = function (name, _default) {
  return esc(_paramWithDefault(name, _default));
};

var _paramType = paramType;
paramType = function (type) {
  return esc(_paramType(type));
};

_.each(actions, function (action) {%>
    - [<%= action.name %>](#<%= action.name.toLowerCase().replace(/[^\w ]/g, '').replace(/ /g, '-') %>)<%
})

%>

## Generic Params

Several parameters can be passed to any API method, and will control the way that those requests are carried out. These parameters are not listed in each method's param list.

| Name | Type | Description |
| ---- | ---- | ----------- |
| `[timeout=10000]` | Number | The number of milliseconds this request has to complete. It defaults to the timeout specified at the client level, which defaults to 10 seconds. |
| `ignore` | Number or Number[] | Don't treat these HTTP status codes as "errors". Example use cases could be `ignore: 404` or `ignore: [404]` |

## Methods<%

_.each(actions, function (action) {
%>

### <%= action.name %>()

<%= action.docUrl %><%

if (_.size(action.allParams)) { %>

| Name | Type | Description |
| ---- | ---- | ----------- |
<%
  _.each(action.allParams, function(param, paramName) {
%>|`<%= paramWithDefault(paramName, param.default) %>` | <%= paramType(param.type) %> | <%= esc(param.description || '') %>|
<% })

} else {%>

-- none --
<%

}

}); %>
