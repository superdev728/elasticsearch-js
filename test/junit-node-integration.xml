<testsuites>
  <testsuite package="elasticsearch-js" id="0" name="yaml -" timestamp="2013-12-12T23:04:57.708Z" hostname="localhost" tests="0" failures="0" errors="0" time="11.39">
    <system-out><![CDATA[INFO: 2013-12-12T23:04:57Z
  Adding connection to http://localhost:9200/

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'HEAD', requestTimeout: 100, path: '/', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="1" name="yaml - bulk/10_basic.yaml" timestamp="2013-12-12T23:04:57.728Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.042">
    <testcase name="Array of objects" time="0.035" classname="node v0.10.23.yaml - bulk"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    bulkBody: true,
    path: '/_bulk',
    body: 
     [ { index: [Object] },
       { f1: 'v1', f2: 42 },
       { index: [Object] },
       { f1: 'v2', f2: 47 } ],
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_bulk?pretty=true' -XPOST -d '{"index":{"_index":"test_index","_type":"test_type","_id":"test_id"}}
  {"f1":"v1","f2":42}
  {"index":{"_index":"test_index","_type":"test_type","_id":"test_id2"}}
  {"f1":"v2","f2":47}
  '
  <- 200
  {
    "took": 28,
    "items": [
      {
        "index": {
          "_index": "test_index",
          "_type": "test_type",
          "_id": "test_id",
          "_version": 1,
          "ok": true
        }
      },
      {
        "index": {
          "_index": "test_index",
          "_type": "test_type",
          "_id": "test_id2",
          "_version": 1,
          "ok": true
        }
      }
    ]
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST', path: '/test_index/_count', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_index/_count?pretty=true' -XPOST
  <- 200
  {
    "count": 2,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="2" name="yaml - bulk/20_list_of_strings.yaml" timestamp="2013-12-12T23:04:57.770Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.038">
    <testcase name="List of strings" time="0.031" classname="node v0.10.23.yaml - bulk"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    bulkBody: true,
    path: '/_bulk',
    body: 
     [ '{"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id"}}',
       '{"f1": "v1", "f2": 42}',
       '{"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id2"}}',
       '{"f1": "v2", "f2": 47}' ],
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_bulk?pretty=true' -XPOST -d '{"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id"}}
  {"f1": "v1", "f2": 42}
  {"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id2"}}
  {"f1": "v2", "f2": 47}
  '
  <- 200
  {
    "took": 26,
    "items": [
      {
        "index": {
          "_index": "test_index",
          "_type": "test_type",
          "_id": "test_id",
          "_version": 1,
          "ok": true
        }
      },
      {
        "index": {
          "_index": "test_index",
          "_type": "test_type",
          "_id": "test_id2",
          "_version": 1,
          "ok": true
        }
      }
    ]
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST', path: '/test_index/_count', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_index/_count?pretty=true' -XPOST
  <- 200
  {
    "count": 2,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="3" name="yaml - bulk/30_big_string.yaml" timestamp="2013-12-12T23:04:57.808Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.041">
    <testcase name="One big string" time="0.035" classname="node v0.10.23.yaml - bulk"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    bulkBody: true,
    path: '/_bulk',
    body: '\n{"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id"}}\n{"f1": "v1", "f2": 42}\n{"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id2"}}\n{"f1": "v2", "f2": 47}\n',
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_bulk?pretty=true' -XPOST -d '
  {"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id"}}
  {"f1": "v1", "f2": 42}
  {"index": {"_index": "test_index", "_type": "test_type", "_id": "test_id2"}}
  {"f1": "v2", "f2": 47}
  '
  <- 200
  {
    "took": 29,
    "items": [
      {
        "index": {
          "_index": "test_index",
          "_type": "test_type",
          "_id": "test_id",
          "_version": 1,
          "ok": true
        }
      },
      {
        "index": {
          "_index": "test_index",
          "_type": "test_type",
          "_id": "test_id2",
          "_version": 1,
          "ok": true
        }
      }
    ]
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST', path: '/test_index/_count', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_index/_count?pretty=true' -XPOST
  <- 200
  {
    "count": 2,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="4" name="yaml - cluster.node_info/10_basic.yaml" timestamp="2013-12-12T23:04:57.849Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.004">
    <testcase name="node_info test" time="0.003" classname="node v0.10.23.yaml - cluster.node_info"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'GET', path: '/_nodes', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_nodes?pretty=true' -XGET
  <- 200
  {
    "ok": true,
    "cluster_name": "elasticsearch",
    "nodes": {
      "9Pp_v3peRvGnrAGvzx-8aA": {
        "name": "Death\'s-Head",
        "transport_address": "inet[/192.168.1.17:9300]",
        "hostname": "Spencers-MacBook-Pro.local",
        "version": "0.90.8-SNAPSHOT",
        "http_address": "inet[/192.168.1.17:9200]"
      }
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="5" name="yaml - cluster.node_stats/10_basic.yaml" timestamp="2013-12-12T23:04:57.853Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.004">
    <testcase name="Nodes stats" time="0.003" classname="node v0.10.23.yaml - cluster.node_stats"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'GET',
    path: '/_nodes/stats',
    query: { indices: true, transport: true } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_nodes/stats?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "nodes": {
      "9Pp_v3peRvGnrAGvzx-8aA": {
        "timestamp": 1386889497854,
        "name": "Death\'s-Head",
        "transport_address": "inet[/192.168.1.17:9300]",
        "hostname": "Spencers-MacBook-Pro.local",
        "indices": {
          "docs": {
            "count": 0,
            "deleted": 0
          },
          "store": {
            "size": "0b",
            "size_in_bytes": 0,
            "throttle_time": "0s",
            "throttle_time_in_millis": 0
          },
          "indexing": {
            "index_total": 5095,
            "index_time": "3.5s",
            "index_time_in_millis": 3593,
            "index_current": 220,
            "delete_total": 742,
            "delete_time": "1ms",
            "delete_time_in_millis": 1,
            "delete_current": 0
          },
          "get": {
            "total": 6059,
            "get_time": "4ms",
            "time_in_millis": 4,
            "exists_total": 4238,
            "exists_time": "4ms",
            "exists_time_in_millis": 4,
            "missing_total": 1821,
            "missing_time": "0s",
            "missing_time_in_millis": 0,
            "current": 0
          },
          "search": {
            "open_contexts": 0,
            "query_total": 2955,
            "query_time": "59ms",
            "query_time_in_millis": 59,
            "query_current": 0,
            "fetch_total": 490,
            "fetch_time": "6ms",
            "fetch_time_in_millis": 6,
            "fetch_current": 0
          },
          "merges": {
            "current": 0,
            "current_docs": 0,
            "current_size": "0b",
            "current_size_in_bytes": 0,
            "total": 0,
            "total_time": "0s",
            "total_time_in_millis": 0,
            "total_docs": 0,
            "total_size": "0b",
            "total_size_in_bytes": 0
          },
          "refresh": {
            "total": 25079,
            "total_time": "4.9s",
            "total_time_in_millis": 4910
          },
          "flush": {
            "total": 506,
            "total_time": "203ms",
            "total_time_in_millis": 203
          },
          "warmer": {
            "current": 0,
            "total": 0,
            "total_time": "0s",
            "total_time_in_millis": 0
          },
          "filter_cache": {
            "memory_size": "0b",
            "memory_size_in_bytes": 0,
            "evictions": 0
          },
          "id_cache": {
            "memory_size": "0b",
            "memory_size_in_bytes": 0
          },
          "fielddata": {
            "memory_size": "0b",
            "memory_size_in_bytes": 0,
            "evictions": 0
          },
          "completion": {
            "size": "0b",
            "size_in_bytes": 0
          },
          "segments": {
            "count": 0
          }
        },
        "transport": {
          "server_open": 13,
          "rx_count": 0,
          "rx_size": "0b",
          "rx_size_in_bytes": 0,
          "tx_count": 0,
          "tx_size": "0b",
          "tx_size_in_bytes": 0
        }
      }
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="6" name="yaml - cluster.put_settings/10_basic.yaml" timestamp="2013-12-12T23:04:57.857Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.008">
    <testcase name="Test put settings" time="0.005" classname="node v0.10.23.yaml - cluster.put_settings"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'PUT',
    path: '/_cluster/settings',
    body: { transient: { 'discovery.zen.minimum_master_nodes': 1 } },
    query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_cluster/settings?pretty=true' -XPUT -d '{
    "transient": {
      "discovery.zen.minimum_master_nodes": 1
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true,
    "persistent": {},
    "transient": {
      "discovery.zen.minimum_master_nodes": "1"
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'GET', path: '/_cluster/settings', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_cluster/settings?pretty=true' -XGET
  <- 200
  {
    "persistent": {},
    "transient": {
      "discovery.zen.minimum_master_nodes": "1"
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="7" name="yaml - cluster.reroute/10_basic.yaml" timestamp="2013-12-12T23:04:57.865Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.005">
    <testcase name="Basic sanity check" time="0.002" classname="node v0.10.23.yaml - cluster.reroute"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST', path: '/_cluster/reroute', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_cluster/reroute?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true,
    "state": {
      "master_node": "9Pp_v3peRvGnrAGvzx-8aA",
      "blocks": {},
      "nodes": {
        "9Pp_v3peRvGnrAGvzx-8aA": {
          "name": "Death\'s-Head",
          "transport_address": "inet[/192.168.1.17:9300]",
          "attributes": {}
        }
      },
      "routing_table": {
        "indices": {}
      },
      "routing_nodes": {
        "unassigned": [],
        "nodes": {
          "9Pp_v3peRvGnrAGvzx-8aA": []
        }
      },
      "allocations": []
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="8" name="yaml - cluster.state/10_basic.yaml" timestamp="2013-12-12T23:04:57.870Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.004">
    <testcase name="cluster state test" time="0.003" classname="node v0.10.23.yaml - cluster.state"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'GET', path: '/_cluster/state', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/_cluster/state?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "master_node": "9Pp_v3peRvGnrAGvzx-8aA",
    "blocks": {},
    "nodes": {
      "9Pp_v3peRvGnrAGvzx-8aA": {
        "name": "Death\'s-Head",
        "transport_address": "inet[/192.168.1.17:9300]",
        "attributes": {}
      }
    },
    "metadata": {
      "templates": {
        "test": {
          "template": "test-*",
          "order": 0,
          "settings": {
            "index.number_of_replicas": "0",
            "index.number_of_shards": "1"
          },
          "mappings": {}
        }
      },
      "indices": {}
    },
    "routing_table": {
      "indices": {}
    },
    "routing_nodes": {
      "unassigned": [],
      "nodes": {
        "9Pp_v3peRvGnrAGvzx-8aA": []
      }
    },
    "allocations": []
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="9" name="yaml - create/10_with_id.yaml" timestamp="2013-12-12T23:04:57.874Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.045">
    <testcase name="Create with ID" time="0.038" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    ignore: [ 409 ],
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 409
  {
    "error": "DocumentAlreadyExistsException[[test_1][2] [test][1]: document already exists]",
    "status": 409
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="10" name="yaml - create/15_without_id.yaml" timestamp="2013-12-12T23:04:57.919Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.036">
    <testcase name="Create without ID" time="0.03" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    path: '/test_1/test',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_1/test?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "QAG2vShxQd-YDy9AEHgF-A",
    "_version": 1
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'GET',
    path: '/test_1/test/QAG2vShxQd-YDy9AEHgF-A',
    query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_1/test/QAG2vShxQd-YDy9AEHgF-A?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "QAG2vShxQd-YDy9AEHgF-A",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="11" name="yaml - create/30_internal_version.yaml" timestamp="2013-12-12T23:04:57.955Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.032">
    <testcase name="Internal version" time="0.026" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    ignore: [ 409 ],
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 409
  {
    "error": "DocumentAlreadyExistsException[[test_1][2] [test][1]: document already exists]",
    "status": 409
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:57Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:57Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="12" name="yaml - create/35_external_version.yaml" timestamp="2013-12-12T23:04:57.987Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.033">
    <testcase name="External version" time="0.027" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:57Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { version_type: 'external', version: 5, op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 5
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    ignore: [ 409 ],
    query: { version_type: 'external', version: 5, op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 409
  {
    "error": "VersionConflictEngineException[[test_1][2] [test][1]: version conflict, current [5], provided [5]]",
    "status": 409
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    ignore: [ 409 ],
    query: { version_type: 'external', version: 6, op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 409
  {
    "error": "DocumentAlreadyExistsException[[test_1][2] [test][1]: document already exists]",
    "status": 409
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="13" name="yaml - create/40_routing.yaml" timestamp="2013-12-12T23:04:58.020Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.035">
    <testcase name="Routing" time="0.029" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { routing: '5', op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '5', fields: '_routing' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "5"
    }
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="14" name="yaml - create/50_parent.yaml" timestamp="2013-12-12T23:04:58.055Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.248">
    <testcase name="Parent" time="0.239" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 500
  {
    "error": "RoutingMissingException[routing is required for [test_1]/[test]/[1]]",
    "status": 500
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5', op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { parent: '5', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "5",
      "_parent": "5"
    }
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="15" name="yaml - create/55_parent_with_routing.yaml" timestamp="2013-12-12T23:04:58.303Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.24">
    <testcase name="Parent with routing" time="0.234" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5', routing: '4', op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { parent: '5', routing: '4', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "4",
      "_parent": "5"
    }
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '4' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="16" name="yaml - create/60_refresh.yaml" timestamp="2013-12-12T23:04:58.543Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.246">
    <testcase name="Refresh" time="0.239" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { settings: { 'index.refresh_interval': -1 } },
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "settings": {
      "index.refresh_interval": -1
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { term: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "term": {
        "_id": 1
      }
    }
  }'
  <- 200
  {
    "took": 0,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 0,
      "max_score": null,
      "hits": []
    }
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { foo: 'bar' },
    query: { refresh: true, op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { term: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "term": {
        "_id": 2
      }
    }
  }'
  <- 200
  {
    "took": 0,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 1,
      "max_score": 1,
      "hits": [
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "2",
          "_score": 1,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="17" name="yaml - create/70_timestamp.yaml" timestamp="2013-12-12T23:04:58.789Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.247">
    <testcase name="Timestamp" time="0.241" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:58Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_timestamp": {
          "enabled": 1,
          "store": "yes"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:58Z
  Request complete

DEBUG: 2013-12-12T23:04:58Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_timestamp": 1386889499014
    }
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { timestamp: '1372011280000', op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3,
    "exists": true,
    "fields": {
      "_timestamp": 1372011280000
    }
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 4
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { timestamp: '2013-06-23T18:14:40.000Z', op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 5,
    "exists": true,
    "fields": {
      "_timestamp": 1372011280000
    }
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="18" name="yaml - create/75_ttl.yaml" timestamp="2013-12-12T23:04:59.036Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.251">
    <testcase name="TTL" time="0.244" classname="node v0.10.23.yaml - create"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_ttl": {
          "enabled": 1,
          "store": "yes",
          "default": "10s"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_ttl": 9996
    }
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { ttl: 100000, op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3,
    "exists": true,
    "fields": {
      "_ttl": 99998
    }
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 4
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { ttl: '20s', op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 5,
    "exists": true,
    "fields": {
      "_ttl": 19997
    }
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 6
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: 
     { ttl: '20s',
       timestamp: '2013-06-23T18:14:40.000Z',
       op_type: 'create' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 400
  {
    "error": "MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1386889499279]]; ",
    "status": 400
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="19" name="yaml - delete/10_basic.yaml" timestamp="2013-12-12T23:04:59.287Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.031">
    <testcase name="Basic" time="0.025" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="20" name="yaml - delete/20_internal_version.yaml" timestamp="2013-12-12T23:04:59.318Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.049">
    <testcase name="Internal version" time="0.043" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    ignore: [ 409 ],
    query: { version: 2 } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 409
  {
    "error": "VersionConflictEngineException[[test_1][2] [test][1]: version conflict, current [1], provided [2]]",
    "status": 409
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    query: { version: 1 } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="21" name="yaml - delete/25_external_version.yaml" timestamp="2013-12-12T23:04:59.367Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.035">
    <testcase name="External version" time="0.029" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { version_type: 'external', version: 5 } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    ignore: [ 409 ],
    query: { version_type: 'external', version: 4 } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 409
  {
    "error": "VersionConflictEngineException[[test_1][2] [test][1]: version conflict, current [5], provided [4]]",
    "status": 409
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    query: { version_type: 'external', version: 6 } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 6
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="22" name="yaml - delete/30_routing.yaml" timestamp="2013-12-12T23:04:59.402Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="Routing" time="0.027" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: { routing: '4' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 404
  {
    "ok": true,
    "found": false,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="23" name="yaml - delete/40_parent.yaml" timestamp="2013-12-12T23:04:59.436Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.247">
    <testcase name="Parent" time="0.238" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET', path: '/', query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/?pretty=true' -XGET
  <- 200
  {
    "ok": true,
    "status": 200,
    "name": "Death\'s-Head",
    "version": {
      "number": "0.90.8",
      "build_hash": "7fb114dbebc82f1547a051ccc3c3eebdf46202f7",
      "build_timestamp": "2013-12-12T19:53:01Z",
      "build_snapshot": true,
      "lucene_version": "4.6"
    },
    "tagline": "You Know, for Search"
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: { parent: '1' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 404
  {
    "ok": true,
    "found": false,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="24" name="yaml - delete/45_parent_with_routing.yaml" timestamp="2013-12-12T23:04:59.683Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.242">
    <testcase name="Parent with routing" time="0.235" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: { parent: '5', routing: '1' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 404
  {
    "ok": true,
    "found": false,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="25" name="yaml - delete/50_refresh.yaml" timestamp="2013-12-12T23:04:59.925Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.264">
    <testcase name="Refresh" time="0.257" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { settings: { 'index.refresh_interval': -1 } },
    query: {} }
  

TRACE: 2013-12-12T23:04:59Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "settings": {
      "index.refresh_interval": -1
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:04:59Z
  Request complete

DEBUG: 2013-12-12T23:04:59Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { foo: 'bar' },
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { terms: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "terms": {
        "_id": [
          1,
          2
        ]
      }
    }
  }'
  <- 200
  {
    "took": 0,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 2,
      "max_score": 0.35355338,
      "hits": [
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "1",
          "_score": 0.35355338,
          "_source": {
            "foo": "bar"
          }
        },
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "2",
          "_score": 0.35355338,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { terms: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "terms": {
        "_id": [
          1,
          2
        ]
      }
    }
  }'
  <- 200
  {
    "took": 1,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 2,
      "max_score": 0.35355338,
      "hits": [
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "1",
          "_score": 0.35355338,
          "_source": {
            "foo": "bar"
          }
        },
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "2",
          "_score": 0.35355338,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE',
    path: '/test_1/test/2',
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "found": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 2
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { terms: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "terms": {
        "_id": [
          1,
          2
        ]
      }
    }
  }'
  <- 200
  {
    "took": 1,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 1,
      "max_score": 0.35355338,
      "hits": [
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "1",
          "_score": 0.35355338,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="26" name="yaml - delete/60_missing.yaml" timestamp="2013-12-12T23:05:00.189Z" hostname="localhost" tests="2" failures="0" errors="0" time="0.061">
    <testcase name="Missing document with catch" time="0.022" classname="node v0.10.23.yaml - delete"/>
    <testcase name="Missing document with ignore" time="0.028" classname="node v0.10.23.yaml - delete"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 404
  {
    "ok": true,
    "found": false,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XDELETE
  <- 404
  {
    "ok": true,
    "found": false,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="27" name="yaml - delete_by_query/10_basic.yaml" timestamp="2013-12-12T23:05:00.250Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.055">
    <testcase name="Basic delete_by_query" time="0.049" classname="node v0.10.23.yaml - delete_by_query"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { foo: 'baz' },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "foo": "baz"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/3',
    body: { foo: 'foo' },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/3?pretty=true' -XPOST -d '{
    "foo": "foo"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "3",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE',
    path: '/test_1/_query',
    body: { match: { foo: 'bar' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/_query?pretty=true' -XDELETE -d '{
    "match": {
      "foo": "bar"
    }
  }'
  <- 200
  {
    "ok": true,
    "_indices": {
      "test_1": {
        "_shards": {
          "total": 5,
          "successful": 5,
          "failed": 0
        }
      }
    }
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST', path: '/test_1/_count', query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/_count?pretty=true' -XPOST
  <- 200
  {
    "count": 2,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="28" name="yaml - exists/10_basic.yaml" timestamp="2013-12-12T23:05:00.305Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="Basic" time="0.027" classname="node v0.10.23.yaml - exists"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="29" name="yaml - exists/30_parent.yaml" timestamp="2013-12-12T23:05:00.339Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.237">
    <testcase name="Parent" time="0.23" classname="node v0.10.23.yaml - exists"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="30" name="yaml - exists/40_routing.yaml" timestamp="2013-12-12T23:05:00.576Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="Routing" time="0.028" classname="node v0.10.23.yaml - exists"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="31" name="yaml - exists/55_parent_with_routing.yaml" timestamp="2013-12-12T23:05:00.610Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.24">
    <testcase name="Parent with routing" time="0.233" classname="node v0.10.23.yaml - exists"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { routing: '4' } }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="32" name="yaml - exists/60_realtime_refresh.yaml" timestamp="2013-12-12T23:05:00.850Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.244">
    <testcase name="Realtime Refresh" time="0.237" classname="node v0.10.23.yaml - exists"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { settings: { index: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:00Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "settings": {
      "index": {
        "refresh_interval": -1,
        "number_of_replicas": 0
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:00Z
  Request complete

DEBUG: 2013-12-12T23:05:00Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "green",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 0
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { realtime: true } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { realtime: false } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/test/1',
    query: { realtime: false, refresh: true } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="33" name="yaml - exists/70_defaults.yaml" timestamp="2013-12-12T23:05:01.094Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="Client-side default type" time="0.028" classname="node v0.10.23.yaml - exists"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_1/_all/1',
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/_all/1?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="34" name="yaml - explain/10_basic.yaml" timestamp="2013-12-12T23:05:01.128Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.039">
    <testcase name="Basic mlt" time="0.033" classname="node v0.10.23.yaml - explain"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar', title: 'howdy' },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar",
    "title": "howdy"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_explain',
    body: { query: { match_all: {} } },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1/_explain?pretty=true' -XPOST -d '{
    "query": {
      "match_all": {}
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "matched": true,
    "explanation": {
      "value": 1,
      "description": "ConstantScore(cache(_type:test)), product of:",
      "details": [
        {
          "value": 1,
          "description": "boost"
        },
        {
          "value": 1,
          "description": "queryNorm"
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="35" name="yaml - explain/20_source_filtering.yaml" timestamp="2013-12-12T23:05:01.167Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.001">
    <testcase name="Source filtering" time="0" classname="node v0.10.23.yaml - explain"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="36" name="yaml - get/10_basic.yaml" timestamp="2013-12-12T23:05:01.168Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.035">
    <testcase name="Basic" time="0.029" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/%E4%B8%AD%E6%96%87',
    body: { foo: 'Hello: 中文' },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/%E4%B8%AD%E6%96%87?pretty=true' -XPOST -d '{
    "foo": "Hello: 中文"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "中文",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/%E4%B8%AD%E6%96%87',
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/%E4%B8%AD%E6%96%87?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "中文",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "Hello: 中文"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/_all/%E4%B8%AD%E6%96%87',
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/_all/%E4%B8%AD%E6%96%87?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "中文",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "Hello: 中文"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="37" name="yaml - get/15_default_values.yaml" timestamp="2013-12-12T23:05:01.203Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.032">
    <testcase name="Default values" time="0.026" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET', path: '/test_1/_all/1', query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/_all/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="38" name="yaml - get/20_fields.yaml" timestamp="2013-12-12T23:05:01.235Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.038">
    <testcase name="Fields" time="0.031" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar', count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar",
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: 'foo' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: 'foo,count' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "count": 1,
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: 'foo,count,_source' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar",
      "count": 1
    },
    "fields": {
      "count": 1,
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="39" name="yaml - get/30_parent.yaml" timestamp="2013-12-12T23:05:01.273Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.239">
    <testcase name="Parent" time="0.23" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '中文' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { parent: '中文', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "中文",
      "_parent": "中文"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="40" name="yaml - get/40_routing.yaml" timestamp="2013-12-12T23:05:01.512Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.039">
    <testcase name="Routing" time="0.033" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '5', fields: '_routing' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "5"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="41" name="yaml - get/55_parent_with_routing.yaml" timestamp="2013-12-12T23:05:01.551Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.253">
    <testcase name="Parent with routing" time="0.247" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { parent: '5', routing: '4', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "4",
      "_parent": "5"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '4' } }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="42" name="yaml - get/60_realtime_refresh.yaml" timestamp="2013-12-12T23:05:01.804Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.248">
    <testcase name="Realtime Refresh" time="0.242" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { settings: { index: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:01Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "settings": {
      "index": {
        "refresh_interval": -1,
        "number_of_replicas": 0
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:01Z
  Request complete

DEBUG: 2013-12-12T23:05:01Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "green",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 0
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { realtime: true } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: { realtime: false } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { realtime: false, refresh: true } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="43" name="yaml - get/70_source_filtering.yaml" timestamp="2013-12-12T23:05:02.053Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="Source filtering" time="0" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="44" name="yaml - get/80_missing.yaml" timestamp="2013-12-12T23:05:02.055Z" hostname="localhost" tests="2" failures="0" errors="0" time="0.005">
    <testcase name="Missing document with catch" time="0.001" classname="node v0.10.23.yaml - get"/>
    <testcase name="Missing document with ignore" time="0.002" classname="node v0.10.23.yaml - get"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "error": "IndexMissingException[[test_1] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "error": "IndexMissingException[[test_1] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="45" name="yaml - get_source/10_basic.yaml" timestamp="2013-12-12T23:05:02.060Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.035">
    <testcase name="Basic" time="0.029" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET', path: '/test_1/test/1/_source', query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET', path: '/test_1/_all/1/_source', query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/_all/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="46" name="yaml - get_source/15_default_values.yaml" timestamp="2013-12-12T23:05:02.095Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.033">
    <testcase name="Default values" time="0.027" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET', path: '/test_1/_all/1/_source', query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/_all/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="47" name="yaml - get_source/30_parent.yaml" timestamp="2013-12-12T23:05:02.128Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.239">
    <testcase name="Parent" time="0.233" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 404
  

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="48" name="yaml - get_source/40_routing.yaml" timestamp="2013-12-12T23:05:02.367Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.037">
    <testcase name="Routing" time="0.031" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 404
  

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="49" name="yaml - get_source/55_parent_with_routing.yaml" timestamp="2013-12-12T23:05:02.404Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.248">
    <testcase name="Parent with routing" time="0.242" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    ignore: [ 404 ],
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 404
  

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    query: { routing: '4' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="50" name="yaml - get_source/60_realtime_refresh.yaml" timestamp="2013-12-12T23:05:02.652Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.042">
    <testcase name="Realtime" time="0.036" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    query: { realtime: true } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    ignore: [ 404 ],
    query: { realtime: false } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 404
  

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    query: { realtime: false, refresh: true } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 200
  {
    "foo": "bar"
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="51" name="yaml - get_source/70_source_filtering.yaml" timestamp="2013-12-12T23:05:02.694Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="Source filtering" time="0.001" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="52" name="yaml - get_source/80_missing.yaml" timestamp="2013-12-12T23:05:02.696Z" hostname="localhost" tests="2" failures="0" errors="0" time="0.005">
    <testcase name="Missing document with catch" time="0.001" classname="node v0.10.23.yaml - get_source"/>
    <testcase name="Missing document with ignore" time="0.002" classname="node v0.10.23.yaml - get_source"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 404
  {
    "error": "IndexMissingException[[test_1] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1/_source',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1/_source?pretty=true' -XGET
  <- 404
  {
    "error": "IndexMissingException[[test_1] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="53" name="yaml - index/10_with_id.yaml" timestamp="2013-12-12T23:05:02.701Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.022">
    <testcase name="Index with ID" time="0.019" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test-weird-index-%E4%B8%AD%E6%96%87/weird.type/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test-weird-index-%E4%B8%AD%E6%96%87/weird.type/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test-weird-index-中文",
    "_type": "weird.type",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test-weird-index-%E4%B8%AD%E6%96%87/weird.type/1',
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test-weird-index-%E4%B8%AD%E6%96%87/weird.type/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test-weird-index-中文",
    "_type": "weird.type",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="54" name="yaml - index/15_without_id.yaml" timestamp="2013-12-12T23:05:02.723Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.035">
    <testcase name="Index without ID" time="0.03" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "cqHdt5sjSnmUk0FhElpurQ",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/cqHdt5sjSnmUk0FhElpurQ',
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/cqHdt5sjSnmUk0FhElpurQ?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "cqHdt5sjSnmUk0FhElpurQ",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="55" name="yaml - index/20_optype.yaml" timestamp="2013-12-12T23:05:02.758Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="Optype" time="0.027" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    ignore: [ 409 ],
    query: { op_type: 'create' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 409
  {
    "error": "DocumentAlreadyExistsException[[test_1][2] [test][1]: document already exists]",
    "status": 409
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="56" name="yaml - index/30_internal_version.yaml" timestamp="2013-12-12T23:05:02.792Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="Internal version" time="0.029" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    ignore: [ 409 ],
    query: { version: 1 } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 409
  {
    "error": "VersionConflictEngineException[[test_1][2] [test][1]: version conflict, current [2], provided [1]]",
    "status": 409
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { version: 2 } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="57" name="yaml - index/35_external_version.yaml" timestamp="2013-12-12T23:05:02.826Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.033">
    <testcase name="External version" time="0.027" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { version_type: 'external', version: 5 } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 5
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    ignore: [ 409 ],
    query: { version_type: 'external', version: 5 } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 409
  {
    "error": "VersionConflictEngineException[[test_1][2] [test][1]: version conflict, current [5], provided [5]]",
    "status": 409
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { version_type: 'external', version: 6 } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 6
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="58" name="yaml - index/40_routing.yaml" timestamp="2013-12-12T23:05:02.859Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="Routing" time="0.028" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '5', fields: '_routing' } }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "5"
    }
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="59" name="yaml - index/50_parent.yaml" timestamp="2013-12-12T23:05:02.893Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.239">
    <testcase name="Parent" time="0.232" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:02Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:02Z
  Request complete

DEBUG: 2013-12-12T23:05:02Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 500
  {
    "error": "RoutingMissingException[routing is required for [test_1]/[test]/[1]]",
    "status": 500
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { parent: '5', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "5",
      "_parent": "5"
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="60" name="yaml - index/55_parent_with_routing.yaml" timestamp="2013-12-12T23:05:03.132Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.237">
    <testcase name="Parent with routing" time="0.231" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { parent: '5', routing: '4', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "4",
      "_parent": "5"
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    ignore: [ 404 ],
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 404
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "exists": false
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '4' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar"
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="61" name="yaml - index/60_refresh.yaml" timestamp="2013-12-12T23:05:03.369Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.246">
    <testcase name="Refresh" time="0.239" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { settings: { 'index.refresh_interval': -1 } },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "settings": {
      "index.refresh_interval": -1
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { term: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "term": {
        "_id": 1
      }
    }
  }'
  <- 200
  {
    "took": 1,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 0,
      "max_score": null,
      "hits": []
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { foo: 'bar' },
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { term: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "term": {
        "_id": 2
      }
    }
  }'
  <- 200
  {
    "took": 1,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 1,
      "max_score": 1,
      "hits": [
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "2",
          "_score": 1,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="62" name="yaml - index/70_timestamp.yaml" timestamp="2013-12-12T23:05:03.615Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.246">
    <testcase name="Timestamp" time="0.24" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_timestamp": {
          "enabled": 1,
          "store": "yes"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_timestamp": 1386889503840
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { timestamp: '1372011280000' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "fields": {
      "_timestamp": 1372011280000
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { timestamp: '2013-06-23T18:14:40.000Z' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3,
    "exists": true,
    "fields": {
      "_timestamp": 1372011280000
    }
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="63" name="yaml - index/75_ttl.yaml" timestamp="2013-12-12T23:05:03.861Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.259">
    <testcase name="TTL" time="0.253" classname="node v0.10.23.yaml - index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:03Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_ttl": {
          "enabled": 1,
          "store": "yes",
          "default": "10s"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:03Z
  Request complete

DEBUG: 2013-12-12T23:05:03Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_ttl": 9997
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { ttl: 100000 } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "fields": {
      "_ttl": 99998
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { ttl: '20s' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3,
    "exists": true,
    "fields": {
      "_ttl": 19998
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { ttl: '20s', timestamp: '2013-06-23T18:14:40.000Z' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 400
  {
    "error": "MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1386889504112]]; ",
    "status": 400
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="64" name="yaml - indices.analyze/10_analyze.yaml" timestamp="2013-12-12T23:05:04.120Z" hostname="localhost" tests="3" failures="0" errors="0" time="0.251">
    <testcase name="Basic test" time="0.003" classname="node v0.10.23.yaml - indices.analyze"/>
    <testcase name="Tokenizer and filter" time="0.003" classname="node v0.10.23.yaml - indices.analyze"/>
    <testcase name="Index and field" time="0.231" classname="node v0.10.23.yaml - indices.analyze"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'HEAD', requestTimeout: 100, path: '/', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST', path: '/_analyze', query: { text: 'Foo Bar' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_analyze?pretty=true' -XPOST
  <- 200
  {
    "tokens": [
      {
        "token": "foo",
        "start_offset": 0,
        "end_offset": 3,
        "type": "<ALPHANUM>",
        "position": 1
      },
      {
        "token": "bar",
        "start_offset": 4,
        "end_offset": 7,
        "type": "<ALPHANUM>",
        "position": 2
      }
    ]
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'HEAD', requestTimeout: 100, path: '/', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/_analyze',
    query: { filters: 'lowercase', text: 'Foo Bar', tokenizer: 'keyword' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_analyze?pretty=true' -XPOST
  <- 200
  {
    "tokens": [
      {
        "token": "foo bar",
        "start_offset": 0,
        "end_offset": 7,
        "type": "word",
        "position": 1
      }
    ]
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'HEAD', requestTimeout: 100, path: '/', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test/_analyze',
    query: { field: 'text', text: 'Foo Bar!' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test/_analyze?pretty=true' -XPOST
  <- 200
  {
    "tokens": [
      {
        "token": "Foo",
        "start_offset": 0,
        "end_offset": 3,
        "type": "word",
        "position": 1
      },
      {
        "token": "Bar!",
        "start_offset": 4,
        "end_offset": 8,
        "type": "word",
        "position": 2
      }
    ]
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="65" name="yaml - indices.analyze/20_analyze_text_format.yaml" timestamp="2013-12-12T23:05:04.371Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.005">
    <testcase name="Text format" time="0.003" classname="node v0.10.23.yaml - indices.analyze"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/_analyze',
    query: { format: 'text', text: 'tHE BLACK and white! AND red' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_analyze?pretty=true' -XPOST
  <- 200
  {
    "tokens": "[black:4->9:<ALPHANUM>]\n\n4: \n[white:14->19:<ALPHANUM>]\n\n6: \n[red:25->28:<ALPHANUM>]\n"
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="66" name="yaml - indices.clear_cache/10_basic.yaml" timestamp="2013-12-12T23:05:04.376Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.004">
    <testcase name="clear_cache test" time="0.003" classname="node v0.10.23.yaml - indices.clear_cache"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST', path: '/_cache/clear', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_cache/clear?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 0,
      "successful": 0,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="67" name="yaml - indices.delete_alias/10_basic.yaml" timestamp="2013-12-12T23:05:04.380Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.037">
    <testcase name="Basic test for delete alias" time="0.031" classname="node v0.10.23.yaml - indices.delete_alias"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST', path: '/testind', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/testind?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'PUT',
    path: '/testind/_alias/testali',
    body: { routing: 'routing value' },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/testind/_alias/testali?pretty=true' -XPUT -d '{
    "routing": "routing value"
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET', path: '/_alias/testali', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_alias/testali?pretty=true' -XGET
  <- 200
  {
    "testind": {
      "aliases": {
        "testali": {
          "index_routing": "routing value",
          "search_routing": "routing value"
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/testind/_alias/testali', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/testind/_alias/testali?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/testind/_alias/testali',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/testind/_alias/testali?pretty=true' -XGET
  <- 404
  {
    "error": "alias [testali] missing",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="68" name="yaml - indices.delete_mapping/10_basic.yaml" timestamp="2013-12-12T23:05:04.417Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.034">
    <testcase name="delete mapping tests" time="0.028" classname="node v0.10.23.yaml - indices.delete_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_index/test_type',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/test_index/test_type', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_index/test_type',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="69" name="yaml - indices.exists/10_basic.yaml" timestamp="2013-12-12T23:05:04.451Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.036">
    <testcase name="Test indices.exists" time="0.029" classname="node v0.10.23.yaml - indices.exists"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_index',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST', path: '/test_index', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/test_index',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="70" name="yaml - indices.get_field_mapping/10_basic.yaml" timestamp="2013-12-12T23:05:04.487Z" hostname="localhost" tests="5" failures="0" errors="0" time="0.141">
    <testcase name="Get field mapping with no index and type" time="0.003" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <testcase name="Get field mapping by index only" time="0.003" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <testcase name="Get field mapping by type &amp; field" time="0.003" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <testcase name="Get field mapping by type &amp; field, with another field that doesn&apos;t exist" time="0.003" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <testcase name="Get field mapping with include_defaults" time="0.004" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET', path: '/_mapping/field/text', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_mapping/field/text?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "text": {
          "full_name": "text",
          "mapping": {
            "text": {
              "type": "string"
            }
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/_mapping/field/text',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/_mapping/field/text?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "text": {
          "full_name": "text",
          "mapping": {
            "text": {
              "type": "string"
            }
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/test_type/_mapping/field/text',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type/_mapping/field/text?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "text": {
          "full_name": "text",
          "mapping": {
            "text": {
              "type": "string"
            }
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/test_type/_mapping/field/text%2Ctext1',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type/_mapping/field/text%2Ctext1?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "text": {
          "full_name": "text",
          "mapping": {
            "text": {
              "type": "string"
            }
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/test_type/_mapping/field/text',
    query: { include_defaults: true } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type/_mapping/field/text?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "text": {
          "full_name": "text",
          "mapping": {
            "text": {
              "type": "string",
              "index_name": "text",
              "boost": 1,
              "index": "analyzed",
              "store": false,
              "term_vector": "no",
              "omit_norms": false,
              "index_options": "positions",
              "analyzer": "default",
              "postings_format": "default",
              "similariry": "default",
              "fielddata": {},
              "null_value": null,
              "include_in_all": false,
              "position_offset_gap": 0,
              "search_quote_analyzer": "default",
              "ignore_above": -1
            }
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="71" name="yaml - indices.get_field_mapping/20_missing_field.yaml" timestamp="2013-12-12T23:05:04.628Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.028">
    <testcase name="Raise 404 when field doesn&apos;t exist" time="0.021" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/test_type/_mapping/field/not_text',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type/_mapping/field/not_text?pretty=true' -XGET
  <- 404
  {}

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="72" name="yaml - indices.get_field_mapping/30_missing_type.yaml" timestamp="2013-12-12T23:05:04.656Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.03">
    <testcase name="Raise 404 when type doesn&apos;t exist" time="0.023" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/not_test_type/_mapping/field/text',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/not_test_type/_mapping/field/text?pretty=true' -XGET
  <- 404
  {}

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="73" name="yaml - indices.get_field_mapping/40_missing_index.yaml" timestamp="2013-12-12T23:05:04.686Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.003">
    <testcase name="Raise 404 when index doesn&apos;t exist" time="0.003" classname="node v0.10.23.yaml - indices.get_field_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/type/_mapping/field/field',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/type/_mapping/field/field?pretty=true' -XGET
  <- 404
  {
    "error": "IndexMissingException[[test_index] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="74" name="yaml - indices.get_mapping/10_basic.yaml" timestamp="2013-12-12T23:05:04.689Z" hostname="localhost" tests="3" failures="0" errors="0" time="0.085">
    <testcase name="Get index mapping" time="0.003" classname="node v0.10.23.yaml - indices.get_mapping"/>
    <testcase name="Get type mapping - pre 1.0" time="0.003" classname="node v0.10.23.yaml - indices.get_mapping"/>
    <testcase name="Get type mapping - post 1.0" time="0.001" classname="node v0.10.23.yaml - indices.get_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET', path: '/test_index/_mapping', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/_mapping?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/test_type/_mapping',
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/test_type/_mapping?pretty=true' -XGET
  <- 200
  {
    "test_type": {
      "properties": {
        "text": {
          "type": "string",
          "analyzer": "whitespace"
        }
      }
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="75" name="yaml - indices.get_mapping/20_missing_type.yaml" timestamp="2013-12-12T23:05:04.774Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.028">
    <testcase name="Raise 404 when type doesn&apos;t exist" time="0.02" classname="node v0.10.23.yaml - indices.get_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index',
    body: { mappings: { test_type: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST -d '{
    "mappings": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/not_test_type/_mapping',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/not_test_type/_mapping?pretty=true' -XGET
  <- 404
  {
    "error": "TypeMissingException[[test_index] type[not_test_type] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="76" name="yaml - indices.get_mapping/30_missing_index.yaml" timestamp="2013-12-12T23:05:04.802Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="Raise 404 when index doesn&apos;t exist" time="0.001" classname="node v0.10.23.yaml - indices.get_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/test_index/not_test_type/_mapping',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/not_test_type/_mapping?pretty=true' -XGET
  <- 404
  {
    "error": "IndexMissingException[[test_index] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="77" name="yaml - indices.get_template/10_basic.yaml" timestamp="2013-12-12T23:05:04.804Z" hostname="localhost" tests="2" failures="0" errors="0" time="0.013">
    <testcase name="Get template" time="0.004" classname="node v0.10.23.yaml - indices.get_template"/>
    <testcase name="Get all templates" time="0.008" classname="node v0.10.23.yaml - indices.get_template"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'PUT',
    path: '/_template/test',
    body: 
     { template: 'test-*',
       settings: { number_of_shards: 1, number_of_replicas: 0 } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template/test?pretty=true' -XPUT -d '{
    "template": "test-*",
    "settings": {
      "number_of_shards": 1,
      "number_of_replicas": 0
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET', path: '/_template/test', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template/test?pretty=true' -XGET
  <- 200
  {
    "test": {
      "order": 0,
      "template": "test-*",
      "settings": {
        "index.number_of_replicas": "0",
        "index.number_of_shards": "1"
      },
      "mappings": {}
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'PUT',
    path: '/_template/test',
    body: { template: 'test-*', settings: { number_of_shards: 1 } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template/test?pretty=true' -XPUT -d '{
    "template": "test-*",
    "settings": {
      "number_of_shards": 1
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'PUT',
    path: '/_template/test2',
    body: { template: 'test2-*', settings: { number_of_shards: 1 } },
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template/test2?pretty=true' -XPUT -d '{
    "template": "test2-*",
    "settings": {
      "number_of_shards": 1
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET', path: '/_template', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template?pretty=true' -XGET
  <- 200
  {
    "test2": {
      "order": 0,
      "template": "test2-*",
      "settings": {
        "index.number_of_shards": "1"
      },
      "mappings": {}
    },
    "test": {
      "order": 0,
      "template": "test-*",
      "settings": {
        "index.number_of_shards": "1"
      },
      "mappings": {}
    }
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="78" name="yaml - indices.get_template/20_get_missing.yaml" timestamp="2013-12-12T23:05:04.817Z" hostname="localhost" tests="2" failures="0" errors="0" time="0.009">
    <testcase name="Get missing template - post 0.90.3" time="0.003" classname="node v0.10.23.yaml - indices.get_template"/>
    <testcase name="Get missing template - pre 0.90.3" time="0" classname="node v0.10.23.yaml - indices.get_template"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE',
    path: '/_template/*',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/_template/test',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template/test?pretty=true' -XGET
  <- 404
  {}

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE',
    path: '/_template/*',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_template/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="79" name="yaml - indices.open/10_basic.yaml" timestamp="2013-12-12T23:05:04.826Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.259">
    <testcase name="Basic test for index open/close" time="0.253" classname="node v0.10.23.yaml - indices.open"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST', path: '/test_index', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST', path: '/test_index/_close', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/_close?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST',
    path: '/test_index/_search',
    ignore: [ 403 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/_search?pretty=true' -XPOST
  <- 403
  {
    "error": "ClusterBlockException[blocked by: [FORBIDDEN/4/index closed];]",
    "status": 403
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'POST', path: '/test_index/_open', query: {} }
  

TRACE: 2013-12-12T23:05:04Z
  curl 'http://localhost:9200/test_index/_open?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:04Z
  Request complete

DEBUG: 2013-12-12T23:05:04Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/test_index/_search', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_search?pretty=true' -XPOST
  <- 200
  {
    "took": 0,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 0,
      "max_score": null,
      "hits": []
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="80" name="yaml - indices.optimize/10_basic.yaml" timestamp="2013-12-12T23:05:05.085Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.035">
    <testcase name="Optimize index tests" time="0.03" classname="node v0.10.23.yaml - indices.optimize"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/testing', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/testing?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/testing/_optimize',
    query: { max_num_segments: 1 } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/testing/_optimize?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 3,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="81" name="yaml - indices.put_alias/10_basic.yaml" timestamp="2013-12-12T23:05:05.120Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.033">
    <testcase name="Basic test for put alias" time="0.027" classname="node v0.10.23.yaml - indices.put_alias"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/test_index', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/_alias/test_alias',
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_alias/test_alias?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'PUT',
    path: '/test_index/_alias/test_alias',
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_alias/test_alias?pretty=true' -XPUT
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/_alias/test_alias',
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_alias/test_alias?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/_alias/test_alias', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_alias/test_alias?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "aliases": {
        "test_alias": {}
      }
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="82" name="yaml - indices.put_mapping/10_basic.yaml" timestamp="2013-12-12T23:05:05.153Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.036">
    <testcase name="Test Create and update mapping" time="0.031" classname="node v0.10.23.yaml - indices.put_mapping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/test_index', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'PUT',
    path: '/test_index/test_type/_mapping',
    body: { test_type: { properties: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/test_type/_mapping?pretty=true' -XPUT -d '{
    "test_type": {
      "properties": {
        "text": {
          "type": "string",
          "analyzer": "whitespace"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/test_index/_mapping', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_mapping?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "properties": {
          "text": {
            "type": "string",
            "analyzer": "whitespace"
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'PUT',
    path: '/test_index/test_type/_mapping',
    body: { test_type: { properties: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/test_type/_mapping?pretty=true' -XPUT -d '{
    "test_type": {
      "properties": {
        "text": {
          "type": "multi_field",
          "fields": {
            "text": {
              "type": "string",
              "analyzer": "whitespace"
            },
            "text_raw": {
              "type": "string",
              "index": "not_analyzed"
            }
          }
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/test_index/_mapping', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_mapping?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "test_type": {
        "properties": {
          "text": {
            "type": "multi_field",
            "fields": {
              "text": {
                "type": "string",
                "analyzer": "whitespace"
              },
              "text_raw": {
                "type": "string",
                "index": "not_analyzed",
                "omit_norms": true,
                "index_options": "docs",
                "include_in_all": false
              }
            }
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="83" name="yaml - indices.put_settings/10_basic.yaml" timestamp="2013-12-12T23:05:05.189Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.029">
    <testcase name="Test indices settings" time="0.024" classname="node v0.10.23.yaml - indices.put_settings"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/test-index',
    body: { settings: { index: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test-index?pretty=true' -XPOST -d '{
    "settings": {
      "index": {
        "number_of_replicas": 0
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/test-index/_settings', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test-index/_settings?pretty=true' -XGET
  <- 200
  {
    "test-index": {
      "settings": {
        "index.number_of_replicas": "0",
        "index.number_of_shards": "5",
        "index.version.created": "900899",
        "index.uuid": "JwCn-WxXSva13FdZSQeO-g"
      }
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'PUT',
    path: '/_settings',
    body: { number_of_replicas: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_settings?pretty=true' -XPUT -d '{
    "number_of_replicas": 1
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/_settings', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_settings?pretty=true' -XGET
  <- 200
  {
    "test-index": {
      "settings": {
        "index.number_of_replicas": "1",
        "index.number_of_shards": "5",
        "index.version.created": "900899",
        "index.uuid": "JwCn-WxXSva13FdZSQeO-g"
      }
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="84" name="yaml - indices.put_template/10_basic.yaml" timestamp="2013-12-12T23:05:05.218Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.019">
    <testcase name="Put template" time="0.018" classname="node v0.10.23.yaml - indices.put_template"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'PUT',
    path: '/_template/test',
    body: 
     { template: 'test-*',
       settings: { number_of_shards: 1, number_of_replicas: 0 } },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_template/test?pretty=true' -XPUT -d '{
    "template": "test-*",
    "settings": {
      "number_of_shards": 1,
      "number_of_replicas": 0
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/_template/test', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_template/test?pretty=true' -XGET
  <- 200
  {
    "test": {
      "order": 0,
      "template": "test-*",
      "settings": {
        "index.number_of_replicas": "0",
        "index.number_of_shards": "1"
      },
      "mappings": {}
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="85" name="yaml - indices.put_warmer/10_basic.yaml" timestamp="2013-12-12T23:05:05.237Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.244">
    <testcase name="Basic test for warmers" time="0.239" classname="node v0.10.23.yaml - indices.put_warmer"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/test_index', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/test_index/_warmer/test_warmer',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_warmer/test_warmer?pretty=true' -XGET
  <- 404
  {
    "error": "IndexWarmerMissingException[index_warmer [test_warmer] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'PUT',
    path: '/test_index/_warmer/test_warmer',
    body: { query: { match_all: {} } },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_warmer/test_warmer?pretty=true' -XPUT -d '{
    "query": {
      "match_all": {}
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/test_index/_warmer/test_warmer',
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_warmer/test_warmer?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "warmers": {
        "test_warmer": {
          "types": [],
          "source": {
            "query": {
              "match_all": {}
            }
          }
        }
      }
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/test_index/_warmer', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_warmer?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/test_index/_warmer/test_warmer',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_warmer/test_warmer?pretty=true' -XGET
  <- 404
  {
    "error": "IndexWarmerMissingException[index_warmer [test_warmer] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="86" name="yaml - indices.segments/10_basic.yaml" timestamp="2013-12-12T23:05:05.481Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.003">
    <testcase name="segments test" time="0.002" classname="node v0.10.23.yaml - indices.segments"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/_segments', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_segments?pretty=true' -XGET
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 0,
      "successful": 0,
      "failed": 0
    },
    "indices": {}
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="87" name="yaml - indices.snapshot_index/10_basic.yaml" timestamp="2013-12-12T23:05:05.484Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.003">
    <testcase name="snapshot_index test" time="0.002" classname="node v0.10.23.yaml - indices.snapshot_index"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/_gateway/snapshot', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_gateway/snapshot?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 0,
      "successful": 0,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="88" name="yaml - indices.stats/10_basic.yaml" timestamp="2013-12-12T23:05:05.487Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.003">
    <testcase name="stats test" time="0.002" classname="node v0.10.23.yaml - indices.stats"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/_stats', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_stats?pretty=true' -XGET
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 0,
      "successful": 0,
      "failed": 0
    },
    "_all": {
      "primaries": {},
      "total": {}
    },
    "indices": {}
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="89" name="yaml - indices.status/10_basic.yaml" timestamp="2013-12-12T23:05:05.490Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.005">
    <testcase name="Indices status test" time="0.004" classname="node v0.10.23.yaml - indices.status"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/_status', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_status?pretty=true' -XGET
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 0,
      "successful": 0,
      "failed": 0
    },
    "indices": {}
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/not_here/_status',
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/not_here/_status?pretty=true' -XGET
  <- 404
  {
    "error": "IndexMissingException[[not_here] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="90" name="yaml - indices.update_aliases/10_basic.yaml" timestamp="2013-12-12T23:05:05.495Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.038">
    <testcase name="Basic test for aliases" time="0.032" classname="node v0.10.23.yaml - indices.update_aliases"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/test_index', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/_alias/test_alias',
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_alias/test_alias?pretty=true' -XHEAD
  <- 404
  

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_aliases',
    body: { actions: [ [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_aliases?pretty=true' -XPOST -d '{
    "actions": [
      {
        "add": {
          "index": "test_index",
          "alias": "test_alias",
          "routing": "routing_value"
        }
      }
    ]
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'HEAD',
    castExists: true,
    path: '/_alias/test_alias',
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_alias/test_alias?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/test_index/_aliases', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_index/_aliases?pretty=true' -XGET
  <- 200
  {
    "test_index": {
      "aliases": {
        "test_alias": {
          "index_routing": "routing_value",
          "search_routing": "routing_value"
        }
      }
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="91" name="yaml - indices.validate_query/10_basic.yaml" timestamp="2013-12-12T23:05:05.533Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.235">
    <testcase name="Validate query api" time="0.227" classname="node v0.10.23.yaml - indices.validate_query"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/testing', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/testing?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_validate/query',
    query: { q: 'query string' } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_validate/query?pretty=true' -XPOST
  <- 200
  {
    "valid": true,
    "_shards": {
      "total": 1,
      "successful": 1,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_validate/query',
    body: { query: { invalid_query: {} } },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_validate/query?pretty=true' -XPOST -d '{
    "query": {
      "invalid_query": {}
    }
  }'
  <- 200
  {
    "valid": false,
    "_shards": {
      "total": 1,
      "successful": 1,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="92" name="yaml - info/10_info.yaml" timestamp="2013-12-12T23:05:05.768Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.007">
    <testcase name="Info" time="0.005" classname="node v0.10.23.yaml - info"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/?pretty=true' -XGET
  <- 200
  {
    "ok": true,
    "status": 200,
    "name": "Death\'s-Head",
    "version": {
      "number": "0.90.8",
      "build_hash": "7fb114dbebc82f1547a051ccc3c3eebdf46202f7",
      "build_timestamp": "2013-12-12T19:53:01Z",
      "build_snapshot": true,
      "lucene_version": "4.6"
    },
    "tagline": "You Know, for Search"
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="93" name="yaml - info/20_lucene_version.yaml" timestamp="2013-12-12T23:05:05.775Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.005">
    <testcase name="Lucene Version" time="0.004" classname="node v0.10.23.yaml - info"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET', path: '/', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/?pretty=true' -XGET
  <- 200
  {
    "ok": true,
    "status": 200,
    "name": "Death\'s-Head",
    "version": {
      "number": "0.90.8",
      "build_hash": "7fb114dbebc82f1547a051ccc3c3eebdf46202f7",
      "build_timestamp": "2013-12-12T19:53:01Z",
      "build_snapshot": true,
      "lucene_version": "4.6"
    },
    "tagline": "You Know, for Search"
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="94" name="yaml - mget/10_basic.yaml" timestamp="2013-12-12T23:05:05.780Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.086">
    <testcase name="Basic multi-get" time="0.076" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/test_2', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_2?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/_flush', query: { refresh: true } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_flush?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 20,
      "successful": 10,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_mget',
    body: { docs: [ [Object], [Object], [Object], [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_index": "test_2",
        "_type": "test",
        "_id": 1
      },
      {
        "_index": "test_1",
        "_type": "none",
        "_id": 1
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": 2
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": 1
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_2",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "none",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "2",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="95" name="yaml - mget/11_default_index_type.yaml" timestamp="2013-12-12T23:05:05.866Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.063">
    <testcase name="Default index/type" time="0.054" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/test_2', query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_2?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 10,
    "active_shards": 10,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 10
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object], [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_index": "test_2",
        "_id": 1
      },
      {
        "_type": "none",
        "_id": 1
      },
      {
        "_id": 2
      },
      {
        "_id": 1
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_2",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "none",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "2",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="96" name="yaml - mget/12_non_existent_index.yaml" timestamp="2013-12-12T23:05:05.929Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.037">
    <testcase name="Non-existent index" time="0.03" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_mget',
    body: { docs: [ [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_index": "test_2",
        "_type": "test",
        "_id": 1
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_2",
        "_type": "test",
        "_id": "1",
        "error": "[test_2] missing"
      }
    ]
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_mget',
    body: { index: 'test_2', docs: [ [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{
    "index": "test_2",
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": 1
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="97" name="yaml - mget/13_missing_metadata.yaml" timestamp="2013-12-12T23:05:05.966Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.043">
    <testcase name="Missing metadata" time="0.037" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_mget',
    body: { docs: [ [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_index": "test_1",
        "_type": "test"
      }
    ]
  }'
  <- 500
  {
    "error": "ActionRequestValidationException[Validation Failed: 1: id is missing for doc 0;]",
    "status": 500
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST',
    path: '/_mget',
    body: { docs: [ [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_type": "test",
        "_id": 1
      }
    ]
  }'
  <- 500
  {
    "error": "ActionRequestValidationException[Validation Failed: 1: index is missing for doc 0;]",
    "status": 500
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/_mget', body: { docs: [] }, query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{
    "docs": []
  }'
  <- 500
  {
    "error": "ActionRequestValidationException[Validation Failed: 1: no documents to get;]",
    "status": 500
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:05Z
  starting request { method: 'POST', path: '/_mget', body: {}, query: {} }
  

TRACE: 2013-12-12T23:05:05Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{}'
  <- 500
  {
    "error": "ActionRequestValidationException[Validation Failed: 1: no documents to get;]",
    "status": 500
  }

INFO: 2013-12-12T23:05:05Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/_mget',
    body: { docs: [ [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_index": "test_1",
        "_id": 1
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="98" name="yaml - mget/15_ids.yaml" timestamp="2013-12-12T23:05:06.009Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.055">
    <testcase name="IDs" time="0.049" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test_2/2',
    body: { foo: 'baz' },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test_2/2?pretty=true' -XPOST -d '{
    "foo": "baz"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test_2",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { ids: [ 1, 2 ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "ids": [
      1,
      2
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "2",
        "exists": false
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/_mget',
    body: { ids: [ 1, 2 ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/_mget?pretty=true' -XPOST -d '{
    "ids": [
      1,
      2
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test_2",
        "_id": "2",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "baz"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/_mget',
    body: { ids: [] },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/_mget?pretty=true' -XPOST -d '{
    "ids": []
  }'
  <- 500
  {
    "error": "ActionRequestValidationException[Validation Failed: 1: no documents to get;]",
    "status": 500
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST', path: '/test_1/_mget', body: {}, query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/_mget?pretty=true' -XPOST -d '{}'
  <- 500
  {
    "error": "ActionRequestValidationException[Validation Failed: 1: no documents to get;]",
    "status": 500
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="99" name="yaml - mget/20_fields.yaml" timestamp="2013-12-12T23:05:06.064Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.068">
    <testcase name="Fields" time="0.061" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object], [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_id": 1
      },
      {
        "_id": 1,
        "fields": "foo"
      },
      {
        "_id": 1,
        "fields": [
          "foo"
        ]
      },
      {
        "_id": 1,
        "fields": [
          "foo",
          "_source"
        ]
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        },
        "fields": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object], [Object] ] },
    query: { fields: 'foo' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_id": 1
      },
      {
        "_id": 1,
        "fields": "foo"
      },
      {
        "_id": 1,
        "fields": [
          "foo"
        ]
      },
      {
        "_id": 1,
        "fields": [
          "foo",
          "_source"
        ]
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        },
        "fields": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object], [Object] ] },
    query: { fields: 'foo' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_id": 1
      },
      {
        "_id": 1,
        "fields": "foo"
      },
      {
        "_id": 1,
        "fields": [
          "foo"
        ]
      },
      {
        "_id": 1,
        "fields": [
          "foo",
          "_source"
        ]
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        },
        "fields": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object], [Object] ] },
    query: { fields: 'foo,_source' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_id": 1
      },
      {
        "_id": 1,
        "fields": "foo"
      },
      {
        "_id": 1,
        "fields": [
          "foo"
        ]
      },
      {
        "_id": 1,
        "fields": [
          "foo",
          "_source"
        ]
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        },
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "foo": "bar"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        },
        "fields": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="100" name="yaml - mget/20_fields_pre_0.90.3.yaml" timestamp="2013-12-12T23:05:06.132Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="Fields" time="0.001" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="101" name="yaml - mget/30_parent.yaml" timestamp="2013-12-12T23:05:06.134Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.25">
    <testcase name="Parent" time="0.243" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '4' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { foo: 'bar' },
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object], [Object] ] },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_id": 1
      },
      {
        "_id": 1,
        "parent": 5,
        "fields": [
          "_parent",
          "_routing"
        ]
      },
      {
        "_id": 1,
        "parent": 4,
        "fields": [
          "_parent",
          "_routing"
        ]
      },
      {
        "_id": 2,
        "parent": 5,
        "fields": [
          "_parent",
          "_routing"
        ]
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "_routing": "4",
          "_parent": "4"
        }
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "2",
        "_version": 1,
        "exists": true,
        "fields": {
          "_routing": "5",
          "_parent": "5"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="102" name="yaml - mget/40_routing.yaml" timestamp="2013-12-12T23:05:06.384Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.038">
    <testcase name="Routing" time="0.031" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object] ] },
    query: { fields: '_routing' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_id": 1
      },
      {
        "_id": 1,
        "routing": 4
      },
      {
        "_id": 1,
        "routing": 5
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "_routing": "5"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="103" name="yaml - mget/55_parent_with_routing.yaml" timestamp="2013-12-12T23:05:06.422Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.24">
    <testcase name="Parent" time="0.234" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { parent: '4', routing: '5' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { docs: [ [Object], [Object], [Object] ] },
    query: { fields: '_routing,_parent' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "docs": [
      {
        "_id": 1
      },
      {
        "_id": 1,
        "parent": 4
      },
      {
        "_id": 1,
        "parent": 4,
        "routing": 5
      }
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "exists": false
      },
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "fields": {
          "_parent": "4",
          "_routing": "5"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="104" name="yaml - mget/60_realtime_refresh.yaml" timestamp="2013-12-12T23:05:06.662Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.245">
    <testcase name="Realtime Refresh" time="0.238" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { settings: { index: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "settings": {
      "index": {
        "refresh_interval": -1,
        "number_of_replicas": 0
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "green",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 0
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { ids: [ 1 ] },
    query: { realtime: false } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "ids": [
      1
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "exists": false
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { ids: [ 1 ] },
    query: { realtime: true } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "ids": [
      1
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/_mget',
    body: { ids: [ 1 ] },
    query: { realtime: false, refresh: true } }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/_mget?pretty=true' -XPOST -d '{
    "ids": [
      1
    ]
  }'
  <- 200
  {
    "docs": [
      {
        "_index": "test_1",
        "_type": "test",
        "_id": "1",
        "_version": 1,
        "exists": true,
        "_source": {
          "foo": "bar"
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="105" name="yaml - mget/70_source_filtering.yaml" timestamp="2013-12-12T23:05:06.907Z" hostname="localhost" tests="8" failures="0" errors="0" time="0.271">
    <testcase name="Source filtering -  true/false" time="0.002" classname="node v0.10.23.yaml - mget"/>
    <testcase name="Source filtering -  include field" time="0.001" classname="node v0.10.23.yaml - mget"/>
    <testcase name="Source filtering -  include nested field" time="0.001" classname="node v0.10.23.yaml - mget"/>
    <testcase name="Source filtering -  exclude field" time="0.001" classname="node v0.10.23.yaml - mget"/>
    <testcase name="Source filtering -  ids and true/false" time="0.001" classname="node v0.10.23.yaml - mget"/>
    <testcase name="Source filtering -  ids and include field" time="0.001" classname="node v0.10.23.yaml - mget"/>
    <testcase name="Source filtering -  ids and include nested field" time="0.001" classname="node v0.10.23.yaml - mget"/>
    <testcase name="Source filtering -  ids and exclude field" time="0" classname="node v0.10.23.yaml - mget"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:06Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:06Z
  Request complete

DEBUG: 2013-12-12T23:05:06Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { include: { field1: 'v1', field2: 'v2' }, count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "include": {
      "field1": "v1",
      "field2": "v2"
    },
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="106" name="yaml - mlt/10_basic.yaml" timestamp="2013-12-12T23:05:07.178Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.038">
    <testcase name="Basic mlt" time="0.032" classname="node v0.10.23.yaml - mlt"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar', title: 'howdy' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar",
    "title": "howdy"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_mlt',
    query: { mlt_fields: 'title' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_mlt?pretty=true' -XPOST
  <- 200
  {
    "took": 1,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 0,
      "max_score": null,
      "hits": []
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="107" name="yaml - msearch/10_basic.yaml" timestamp="2013-12-12T23:05:07.216Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.046">
    <testcase name="Basic multi-search" time="0.038" classname="node v0.10.23.yaml - msearch"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/2',
    body: { foo: 'baz' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/2?pretty=true' -XPOST -d '{
    "foo": "baz"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/3',
    body: { foo: 'foo' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/3?pretty=true' -XPOST -d '{
    "foo": "foo"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "3",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    bulkBody: true,
    path: '/_msearch',
    body: 
     [ { index: 'test_1' },
       { query: [Object] },
       { index: 'test_2' },
       { query: [Object] },
       { search_type: 'count', index: 'test_1' },
       { query: [Object] } ],
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_msearch?pretty=true' -XPOST -d '{"index":"test_1"}
  {"query":{"match_all":{}}}
  {"index":"test_2"}
  {"query":{"match_all":{}}}
  {"search_type":"count","index":"test_1"}
  {"query":{"match":{"foo":"bar"}}}
  '
  <- 200
  {
    "responses": [
      {
        "took": 1,
        "timed_out": false,
        "_shards": {
          "total": 5,
          "successful": 5,
          "failed": 0
        },
        "hits": {
          "total": 3,
          "max_score": 1,
          "hits": [
            {
              "_index": "test_1",
              "_type": "test",
              "_id": "1",
              "_score": 1,
              "_source": {
                "foo": "bar"
              }
            },
            {
              "_index": "test_1",
              "_type": "test",
              "_id": "2",
              "_score": 1,
              "_source": {
                "foo": "baz"
              }
            },
            {
              "_index": "test_1",
              "_type": "test",
              "_id": "3",
              "_score": 1,
              "_source": {
                "foo": "foo"
              }
            }
          ]
        }
      },
      {
        "error": "IndexMissingException[[test_2] missing]"
      },
      {
        "took": 1,
        "timed_out": false,
        "_shards": {
          "total": 5,
          "successful": 5,
          "failed": 0
        },
        "hits": {
          "total": 1,
          "max_score": 0,
          "hits": []
        }
      }
    ]
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="108" name="yaml - percolate/10_old.yaml" timestamp="2013-12-12T23:05:07.262Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.056">
    <testcase name="Basic percolation tests" time="0.048" classname="node v0.10.23.yaml - percolate"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/test_index', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_index?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/_percolator/test_index/test_percolator',
    body: { query: { match_all: {} } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_percolator/test_index/test_percolator?pretty=true' -XPOST -d '{
    "query": {
      "match_all": {}
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "_percolator",
    "_type": "test_index",
    "_id": "test_percolator",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 11,
      "successful": 6,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_index/test_type/_percolate',
    body: { doc: { foo: 'bar' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_index/test_type/_percolate?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "bar"
    }
  }'
  <- 200
  {
    "ok": true,
    "matches": [
      "test_percolator"
    ]
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="109" name="yaml - percolate/15_new.yaml" timestamp="2013-12-12T23:05:07.318Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.001">
    <testcase name="Basic percolation tests" time="0" classname="node v0.10.23.yaml - percolate"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="110" name="yaml - ping/10_ping.yaml" timestamp="2013-12-12T23:05:07.319Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.003">
    <testcase name="Ping" time="0.002" classname="node v0.10.23.yaml - ping"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'HEAD', requestTimeout: 100, path: '/', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/?pretty=true' -XHEAD
  <- 200
  

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="111" name="yaml - scroll/10_basic.yaml" timestamp="2013-12-12T23:05:07.322Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.038">
    <testcase name="Basic scroll" time="0.031" classname="node v0.10.23.yaml - scroll"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/test_scroll', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_scroll?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_scroll/test/42',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_scroll/test/42?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_scroll",
    "_type": "test",
    "_id": "42",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_scroll/_search',
    body: { query: { match_all: {} } },
    query: { search_type: 'scan', scroll: '1m' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_scroll/_search?pretty=true' -XPOST -d '{
    "query": {
      "match_all": {}
    }
  }'
  <- 200
  {
    "_scroll_id": "c2Nhbjs1OzMxODY6OVBwX3YzcGVSdkduckFHdnp4LThhQTszMTg5OjlQcF92M3BlUnZHbnJBR3Z6eC04YUE7MzE5MDo5UHBfdjNwZVJ2R25yQUd2engtOGFBOzMxODc6OVBwX3YzcGVSdkduckFHdnp4LThhQTszMTg4OjlQcF92M3BlUnZHbnJBR3Z6eC04YUE7MTt0b3RhbF9oaXRzOjE7",
    "took": 0,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 1,
      "max_score": 0,
      "hits": []
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/_search/scroll/c2Nhbjs1OzMxODY6OVBwX3YzcGVSdkduckFHdnp4LThhQTszMTg5OjlQcF92M3BlUnZHbnJBR3Z6eC04YUE7MzE5MDo5UHBfdjNwZVJ2R25yQUd2engtOGFBOzMxODc6OVBwX3YzcGVSdkduckFHdnp4LThhQTszMTg4OjlQcF92M3BlUnZHbnJBR3Z6eC04YUE7MTt0b3RhbF9oaXRzOjE7',
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_search/scroll/c2Nhbjs1OzMxODY6OVBwX3YzcGVSdkduckFHdnp4LThhQTszMTg5OjlQcF92M3BlUnZHbnJBR3Z6eC04YUE7MzE5MDo5UHBfdjNwZVJ2R25yQUd2engtOGFBOzMxODc6OVBwX3YzcGVSdkduckFHdnp4LThhQTszMTg4OjlQcF92M3BlUnZHbnJBR3Z6eC04YUE7MTt0b3RhbF9oaXRzOjE7?pretty=true' -XPOST
  <- 200
  {
    "took": 0,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 1,
      "max_score": 0,
      "hits": [
        {
          "_index": "test_scroll",
          "_type": "test",
          "_id": "42",
          "_score": 0,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="112" name="yaml - search/10_source_filtering.yaml" timestamp="2013-12-12T23:05:07.360Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="Source filtering" time="0.001" classname="node v0.10.23.yaml - search"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="113" name="yaml - search/20_default_values.yaml" timestamp="2013-12-12T23:05:07.362Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.066">
    <testcase name="Default index" time="0.056" classname="node v0.10.23.yaml - search"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/test_2', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_2?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/test_1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_2/test/42',
    body: { foo: 'bar' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_2/test/42?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_2",
    "_type": "test",
    "_id": "42",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/test_1%2Ctest_2/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1%2Ctest_2/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 20,
      "successful": 10,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/_all/test/_search',
    body: { query: { match: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_all/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "match": {
        "foo": "bar"
      }
    }
  }'
  <- 200
  {
    "took": 0,
    "timed_out": false,
    "_shards": {
      "total": 10,
      "successful": 10,
      "failed": 0
    },
    "hits": {
      "total": 2,
      "max_score": 0.30685282,
      "hits": [
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "1",
          "_score": 0.30685282,
          "_source": {
            "foo": "bar"
          }
        },
        {
          "_index": "test_2",
          "_type": "test",
          "_id": "42",
          "_score": 0.30685282,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="114" name="yaml - suggest/10_basic.yaml" timestamp="2013-12-12T23:05:07.428Z" hostname="localhost" tests="2" failures="0" errors="0" time="0.079">
    <testcase name="Basic tests for suggest API - pre v1" time="0.006" classname="node v0.10.23.yaml - suggest"/>
    <testcase name="Basic tests for suggest API - post v1" time="0.001" classname="node v0.10.23.yaml - suggest"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test/test/testing_document',
    body: { body: 'Amsterdam meetup' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test/test/testing_document?pretty=true' -XPOST -d '{
    "body": "Amsterdam meetup"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test",
    "_type": "test",
    "_id": "testing_document",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/_suggest',
    body: { test_suggestion: { text: 'The Amsterdma meetpu', term: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_suggest?pretty=true' -XPOST -d '{
    "test_suggestion": {
      "text": "The Amsterdma meetpu",
      "term": {
        "field": "body"
      }
    }
  }'
  <- 200
  {
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "test_suggestion": [
      {
        "text": "amsterdma",
        "offset": 4,
        "length": 9,
        "options": [
          {
            "text": "amsterdam",
            "score": 0.8888889,
            "freq": 1
          }
        ]
      },
      {
        "text": "meetpu",
        "offset": 14,
        "length": 6,
        "options": [
          {
            "text": "meetup",
            "score": 0.8333333,
            "freq": 1
          }
        ]
      }
    ]
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test/test/testing_document',
    body: { body: 'Amsterdam meetup' },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test/test/testing_document?pretty=true' -XPOST -d '{
    "body": "Amsterdam meetup"
  }'
  <- 201
  {
    "ok": true,
    "_index": "test",
    "_type": "test",
    "_id": "testing_document",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST', path: '/_refresh', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_refresh?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_shards": {
      "total": 10,
      "successful": 5,
      "failed": 0
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="115" name="yaml - update/10_doc.yaml" timestamp="2013-12-12T23:05:07.507Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.045">
    <testcase name="Partial document" time="0.038" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar', count: 1, nested: { one: 1, two: 2 } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar",
    "count": 1,
    "nested": {
      "one": 1,
      "two": 2
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz', nested: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz",
      "nested": {
        "one": 3
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "_source": {
      "foo": "baz",
      "count": 1,
      "nested": {
        "one": 3,
        "two": 2
      }
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="116" name="yaml - update/15_script.yaml" timestamp="2013-12-12T23:05:07.552Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.058">
    <testcase name="Script" time="0.052" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar', count: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar",
    "count": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: 
     { lang: 'mvel',
       script: 'ctx._source.foo = bar',
       params: { bar: 'xxx' } },
    query: { script: '1' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "lang": "mvel",
    "script": "ctx._source.foo = bar",
    "params": {
      "bar": "xxx"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "_source": {
      "foo": "xxx",
      "count": 1
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    query: { lang: 'mvel', script: 'ctx._source.foo = \'yyy\'' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3,
    "exists": true,
    "_source": {
      "foo": "yyy",
      "count": 1
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { script: '1', lang: 'doesnotexist', params: { bar: 'xxx' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "script": "1",
    "lang": "doesnotexist",
    "params": {
      "bar": "xxx"
    }
  }'
  <- 400
  {
    "error": "ElasticSearchIllegalArgumentException[failed to execute script]; nested: ElasticSearchIllegalArgumentException[script_lang not supported [doesnotexist]]; ",
    "status": 400
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    query: { lang: 'doesnotexist', script: '1' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST
  <- 400
  {
    "error": "ElasticSearchIllegalArgumentException[failed to execute script]; nested: ElasticSearchIllegalArgumentException[script_lang not supported [doesnotexist]]; ",
    "status": 400
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="117" name="yaml - update/20_doc_upsert.yaml" timestamp="2013-12-12T23:05:07.610Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.038">
    <testcase name="Doc upsert" time="0.032" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'bar', count: 1 }, upsert: { foo: 'baz' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "bar",
      "count": 1
    },
    "upsert": {
      "foo": "baz"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "baz"
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'bar', count: 1 }, upsert: { foo: 'baz' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "bar",
      "count": 1
    },
    "upsert": {
      "foo": "baz"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "_source": {
      "foo": "bar",
      "count": 1
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="118" name="yaml - update/22_doc_as_upsert.yaml" timestamp="2013-12-12T23:05:07.648Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.039">
    <testcase name="Doc as upsert" time="0.033" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'bar', count: 1 }, doc_as_upsert: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "bar",
      "count": 1
    },
    "doc_as_upsert": 1
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "bar",
      "count": 1
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { count: 2 }, doc_as_upsert: 1 },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "count": 2
    },
    "doc_as_upsert": 1
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "_source": {
      "foo": "bar",
      "count": 2
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="119" name="yaml - update/25_script_upsert.yaml" timestamp="2013-12-12T23:05:07.687Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.04">
    <testcase name="Script upsert" time="0.034" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: 
     { script: 'ctx._source.foo = bar',
       params: { bar: 'xxx' },
       upsert: { foo: 'baz' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "script": "ctx._source.foo = bar",
    "params": {
      "bar": "xxx"
    },
    "upsert": {
      "foo": "baz"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "_source": {
      "foo": "baz"
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: 
     { script: 'ctx._source.foo = bar',
       params: { bar: 'xxx' },
       upsert: { foo: 'baz' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "script": "ctx._source.foo = bar",
    "params": {
      "bar": "xxx"
    },
    "upsert": {
      "foo": "baz"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET', path: '/test_1/test/1', query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "_source": {
      "foo": "xxx"
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="120" name="yaml - update/30_internal_version.yaml" timestamp="2013-12-12T23:05:07.727Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="Internal version" time="0.001" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="121" name="yaml - update/35_external_version.yaml" timestamp="2013-12-12T23:05:07.729Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="External version" time="0.001" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="122" name="yaml - update/40_routing.yaml" timestamp="2013-12-12T23:05:07.731Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.04">
    <testcase name="Routing" time="0.034" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { routing: '5' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '5', fields: '_routing' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "5"
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' } },
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    }
  }'
  <- 404
  {
    "error": "DocumentMissingException[[test_1][2] [test][1]: document missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' } },
    query: { routing: '5', fields: 'foo' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "get": {
      "exists": true,
      "fields": {
        "foo": "baz"
      }
    }
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="123" name="yaml - update/50_parent.yaml" timestamp="2013-12-12T23:05:07.771Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.247">
    <testcase name="Parent" time="0.241" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:07Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 500
  {
    "error": "RoutingMissingException[routing is required for [test_1]/[test]/[1]]",
    "status": 500
  }

INFO: 2013-12-12T23:05:07Z
  Request complete

DEBUG: 2013-12-12T23:05:07Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { parent: '5', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "5",
      "_parent": "5"
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' } },
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    }
  }'
  <- 404
  {
    "error": "DocumentMissingException[[test_1][2] [test][1]: document missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' } },
    query: { parent: '5', fields: 'foo' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "get": {
      "exists": true,
      "fields": {
        "foo": "baz"
      }
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="124" name="yaml - update/55_parent_with_routing.yaml" timestamp="2013-12-12T23:05:08.018Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.249">
    <testcase name="Parent with routing" time="0.243" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_parent": {
          "type": "foo"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { parent: '5', routing: '4' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { routing: '4', parent: '5', fields: '_parent,_routing' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_routing": "4",
      "_parent": "5"
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' } },
    ignore: [ 404 ],
    query: { parent: '5' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    }
  }'
  <- 404
  {
    "error": "DocumentMissingException[[test_1][1] [test][1]: document missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' } },
    query: { parent: '5', routing: '4', fields: 'foo' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "get": {
      "exists": true,
      "fields": {
        "foo": "baz"
      }
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="125" name="yaml - update/60_refresh.yaml" timestamp="2013-12-12T23:05:08.267Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.249">
    <testcase name="Refresh" time="0.243" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { settings: { 'index.refresh_interval': -1 } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "settings": {
      "index.refresh_interval": -1
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { term: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "term": {
        "_id": 1
      }
    }
  }'
  <- 200
  {
    "took": 1,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 0,
      "max_score": null,
      "hits": []
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/2/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { refresh: true } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/2/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "2",
    "_version": 1
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/_search',
    body: { query: { term: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/_search?pretty=true' -XPOST -d '{
    "query": {
      "term": {
        "_id": 2
      }
    }
  }'
  <- 200
  {
    "took": 1,
    "timed_out": false,
    "_shards": {
      "total": 5,
      "successful": 5,
      "failed": 0
    },
    "hits": {
      "total": 1,
      "max_score": 1,
      "hits": [
        {
          "_index": "test_1",
          "_type": "test",
          "_id": "2",
          "_score": 1,
          "_source": {
            "foo": "bar"
          }
        }
      ]
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="126" name="yaml - update/70_timestamp.yaml" timestamp="2013-12-12T23:05:08.516Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.242">
    <testcase name="Timestamp" time="0.235" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_timestamp": {
          "enabled": 1,
          "store": "yes"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_timestamp": 1386889508738
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { timestamp: '1372011280000' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "fields": {
      "_timestamp": 1372011280000
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { timestamp: '2013-06-23T18:14:40.000Z' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_timestamp' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3,
    "exists": true,
    "fields": {
      "_timestamp": 1372011280000
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="127" name="yaml - update/75_ttl.yaml" timestamp="2013-12-12T23:05:08.758Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.246">
    <testcase name="TTL" time="0.24" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1',
    body: { mappings: { test: [Object] } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1?pretty=true' -XPOST -d '{
    "mappings": {
      "test": {
        "_ttl": {
          "enabled": 1,
          "store": "yes",
          "default": "10s"
        }
      }
    }
  }'
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/_cluster/health',
    query: { wait_for_status: 'yellow' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/_cluster/health?pretty=true' -XGET
  <- 200
  {
    "cluster_name": "elasticsearch",
    "status": "yellow",
    "timed_out": false,
    "number_of_nodes": 1,
    "number_of_data_nodes": 1,
    "active_primary_shards": 5,
    "active_shards": 5,
    "relocating_shards": 0,
    "initializing_shards": 0,
    "unassigned_shards": 5
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "exists": true,
    "fields": {
      "_ttl": 9997
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { ttl: 100000 } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 2,
    "exists": true,
    "fields": {
      "_ttl": 99998
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { ttl: '20s' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 200
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'GET',
    path: '/test_1/test/1',
    query: { fields: '_ttl' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XGET
  <- 200
  {
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 3,
    "exists": true,
    "fields": {
      "_ttl": 19998
    }
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'POST',
    path: '/test_1/test/1',
    body: { foo: 'bar' },
    query: { ttl: '20s', timestamp: '2013-06-23T18:14:40.000Z' } }
  

TRACE: 2013-12-12T23:05:08Z
  curl 'http://localhost:9200/test_1/test/1?pretty=true' -XPOST -d '{
    "foo": "bar"
  }'
  <- 400
  {
    "error": "MapperParsingException[failed to parse [_ttl]]; nested: AlreadyExpiredException[already expired [test_1]/[test]/[1] due to expire at [1372011300000] and was processed at [1386889508997]]; ",
    "status": 400
  }

INFO: 2013-12-12T23:05:08Z
  Request complete

DEBUG: 2013-12-12T23:05:08Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="128" name="yaml - update/80_fields.yaml" timestamp="2013-12-12T23:05:09.004Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.031">
    <testcase name="Fields" time="0.025" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'baz' }, upsert: { foo: 'bar' } },
    query: { fields: 'foo,bar,_source' } }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "baz"
    },
    "upsert": {
      "foo": "bar"
    }
  }'
  <- 201
  {
    "ok": true,
    "_index": "test_1",
    "_type": "test",
    "_id": "1",
    "_version": 1,
    "get": {
      "exists": true,
      "_source": {
        "foo": "bar"
      },
      "fields": {
        "foo": "bar"
      }
    }
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="129" name="yaml - update/85_fields_meta.yaml" timestamp="2013-12-12T23:05:09.035Z" hostname="localhost" tests="1" failures="0" errors="0" time="0.002">
    <testcase name="Metadata Fields" time="0.001" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 404
  {
    "error": "IndexMissingException[[*] missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

]]></system-out>
  </testsuite>
  <testsuite package="elasticsearch-js" id="130" name="yaml - update/90_missing.yaml" timestamp="2013-12-12T23:05:09.037Z" hostname="localhost" tests="2" failures="0" errors="0" time="0.061">
    <testcase name="Missing document (partial doc)" time="0.026" classname="node v0.10.23.yaml - update"/>
    <testcase name="Missing document (script)" time="0.024" classname="node v0.10.23.yaml - update"/>
    <system-out><![CDATA[DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'bar' } },
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "bar"
    }
  }'
  <- 404
  {
    "error": "DocumentMissingException[[test_1][2] [test][1]: document missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { doc: { foo: 'bar' } },
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "doc": {
      "foo": "bar"
    }
  }'
  <- 404
  {
    "error": "DocumentMissingException[[test_1][2] [test][1]: document missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    body: { script: 'ctx._source.foo = bar', params: { bar: 'xxx' } },
    ignore: [ 404 ],
    query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "script": "ctx._source.foo = bar",
    "params": {
      "bar": "xxx"
    }
  }'
  <- 404
  {
    "error": "DocumentMissingException[[test_1][2] [test][1]: document missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'POST',
    path: '/test_1/test/1/_update',
    ignore: [ 404 ],
    body: { script: 'ctx._source.foo = bar', params: { bar: 'xxx' } },
    query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/test_1/test/1/_update?pretty=true' -XPOST -d '{
    "script": "ctx._source.foo = bar",
    "params": {
      "bar": "xxx"
    }
  }'
  <- 404
  {
    "error": "DocumentMissingException[[test_1][2] [test][1]: document missing]",
    "status": 404
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

DEBUG: 2013-12-12T23:05:09Z
  starting request { method: 'DELETE', path: '/*', ignore: [ 404 ], query: {} }
  

TRACE: 2013-12-12T23:05:09Z
  curl 'http://localhost:9200/*?pretty=true' -XDELETE
  <- 200
  {
    "ok": true,
    "acknowledged": true
  }

INFO: 2013-12-12T23:05:09Z
  Request complete

]]></system-out>
  </testsuite>
</testsuites>

