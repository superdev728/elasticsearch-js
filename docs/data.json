{
    "project": {
        "name": "elasticsearch-js",
        "description": "",
        "version": "0.0.1",
        "url": "https://github.com/elasticsearch/elasticsearch-js",
        "logo": ""
    },
    "files": {
        "src/api/cluster/get_settings.js": {
            "name": "src/api/cluster/get_settings.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/health.js": {
            "name": "src/api/cluster/health.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/node_hot_threads.js": {
            "name": "src/api/cluster/node_hot_threads.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/node_info.js": {
            "name": "src/api/cluster/node_info.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/node_shutdown.js": {
            "name": "src/api/cluster/node_shutdown.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/node_stats.js": {
            "name": "src/api/cluster/node_stats.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/put_settings.js": {
            "name": "src/api/cluster/put_settings.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/reroute.js": {
            "name": "src/api/cluster/reroute.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/cluster/state.js": {
            "name": "src/api/cluster/state.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/analyze.js": {
            "name": "src/api/indices/analyze.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/clear_cache.js": {
            "name": "src/api/indices/clear_cache.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/close.js": {
            "name": "src/api/indices/close.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/create.js": {
            "name": "src/api/indices/create.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/delete.js": {
            "name": "src/api/indices/delete.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/delete_alias.js": {
            "name": "src/api/indices/delete_alias.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/delete_mapping.js": {
            "name": "src/api/indices/delete_mapping.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/delete_template.js": {
            "name": "src/api/indices/delete_template.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/delete_warmer.js": {
            "name": "src/api/indices/delete_warmer.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/exists.js": {
            "name": "src/api/indices/exists.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/exists_alias.js": {
            "name": "src/api/indices/exists_alias.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/exists_type.js": {
            "name": "src/api/indices/exists_type.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/flush.js": {
            "name": "src/api/indices/flush.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/get_alias.js": {
            "name": "src/api/indices/get_alias.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/get_aliases.js": {
            "name": "src/api/indices/get_aliases.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/get_mapping.js": {
            "name": "src/api/indices/get_mapping.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/get_settings.js": {
            "name": "src/api/indices/get_settings.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/get_template.js": {
            "name": "src/api/indices/get_template.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/get_warmer.js": {
            "name": "src/api/indices/get_warmer.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/open.js": {
            "name": "src/api/indices/open.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/optimize.js": {
            "name": "src/api/indices/optimize.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/put_alias.js": {
            "name": "src/api/indices/put_alias.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/put_mapping.js": {
            "name": "src/api/indices/put_mapping.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/put_settings.js": {
            "name": "src/api/indices/put_settings.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/put_template.js": {
            "name": "src/api/indices/put_template.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/put_warmer.js": {
            "name": "src/api/indices/put_warmer.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/refresh.js": {
            "name": "src/api/indices/refresh.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/segments.js": {
            "name": "src/api/indices/segments.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/snapshot_index.js": {
            "name": "src/api/indices/snapshot_index.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/stats.js": {
            "name": "src/api/indices/stats.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/status.js": {
            "name": "src/api/indices/status.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/update_aliases.js": {
            "name": "src/api/indices/update_aliases.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/indices/validate_query.js": {
            "name": "src/api/indices/validate_query.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/bulk.js": {
            "name": "src/api/bulk.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/count.js": {
            "name": "src/api/count.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/create.js": {
            "name": "src/api/create.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/delete.js": {
            "name": "src/api/delete.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/delete_by_query.js": {
            "name": "src/api/delete_by_query.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/exists.js": {
            "name": "src/api/exists.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/explain.js": {
            "name": "src/api/explain.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/get.js": {
            "name": "src/api/get.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/get_source.js": {
            "name": "src/api/get_source.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/index.js": {
            "name": "src/api/index.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/info.js": {
            "name": "src/api/info.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/mget.js": {
            "name": "src/api/mget.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/mlt.js": {
            "name": "src/api/mlt.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/msearch.js": {
            "name": "src/api/msearch.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/percolate.js": {
            "name": "src/api/percolate.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/scroll.js": {
            "name": "src/api/scroll.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/search.js": {
            "name": "src/api/search.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/suggest.js": {
            "name": "src/api/suggest.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/api/update.js": {
            "name": "src/api/update.js",
            "modules": {},
            "classes": {},
            "fors": {
                "Client": 1
            },
            "namespaces": {}
        },
        "src/lib/loggers/file.js": {
            "name": "src/lib/loggers/file.js",
            "modules": {},
            "classes": {
                "Loggers.File": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/loggers/stdio.js": {
            "name": "src/lib/loggers/stdio.js",
            "modules": {},
            "classes": {
                "Loggers.Stdio": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/loggers/stream.js": {
            "name": "src/lib/loggers/stream.js",
            "modules": {},
            "classes": {
                "Loggers.Stream": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/transports/jquery_xhr.js": {
            "name": "src/lib/transports/jquery_xhr.js",
            "modules": {},
            "classes": {
                "jQueryXhr": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/transports/node_http.js": {
            "name": "src/lib/transports/node_http.js",
            "modules": {},
            "classes": {
                "NodeHttp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/client.js": {
            "name": "src/lib/client.js",
            "modules": {},
            "classes": {
                "Client": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/connection_pool.js": {
            "name": "src/lib/connection_pool.js",
            "modules": {},
            "classes": {
                "ConnectionPool": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/log.js": {
            "name": "src/lib/log.js",
            "modules": {},
            "classes": {
                "Log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/transport.js": {
            "name": "src/lib/transport.js",
            "modules": {},
            "classes": {
                "Transport": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/lib/utils.js": {
            "name": "src/lib/utils.js",
            "modules": {},
            "classes": {
                "utils": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Client": {
            "name": "Client",
            "shortname": "Client",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/client.js",
            "line": 6,
            "description": "A client that makes requests to Elasticsearch via a {{#crossLink \"Transport\"}}Transport{{/crossLink}}\n\nInitializing a client might look something like:\n\n```\nvar client = new Elasticsearch.Client({\n  transport: {\n    hosts: [\n      'es1.net:9200',\n      'es2.net:9200'\n    ],\n    sniff_on_start: true\n  },\n  log: {\n    type: 'file',\n    level: 'warning'\n  }\n})\n```",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "- Configuration for the transport",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "transport",
                            "description": "- Transport settings passed to {{#crossLink \"Transport\"}}Transport Constructor{{/crossLink}}",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "log",
                            "description": "- Log output settings {{#crossLink \"Log\"}}Log Constructor{{/crossLink}}",
                            "type": "String|ArrayOfStrings>",
                            "optional": true
                        },
                        {
                            "name": "trace",
                            "description": "- Create a log output to stdio that only tracks trace logs",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ]
        },
        "Loggers.File": {
            "name": "Loggers.File",
            "shortname": "Loggers.File",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/loggers/file.js",
            "line": 1,
            "description": "Logger that writes to a file",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "- Configuration for the FileLogger object",
                    "type": "Object"
                }
            ]
        },
        "Loggers.Stdio": {
            "name": "Loggers.Stdio",
            "shortname": "Loggers.Stdio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Log"
            ],
            "file": "src/lib/loggers/stdio.js",
            "line": 5,
            "description": "Special version of the Stream logger, which logs errors and warnings to stderr and all other\nlevels to stdout.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "- The configuration for the Logger",
                    "type": "Object",
                    "props": [
                        {
                            "name": "level",
                            "description": "- The highest log level for this logger to output.",
                            "type": "String"
                        }
                    ]
                },
                {
                    "name": "bridge",
                    "description": "- The object that triggers logging events, which we will record",
                    "type": "Log"
                }
            ]
        },
        "Loggers.Stream": {
            "name": "Loggers.Stream",
            "shortname": "Loggers.Stream",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/loggers/stream.js",
            "line": 1,
            "description": "A logger object, which listens to the LogBridge for logging events based on it's config. This\nlogger writes it logs to any [WriteableStream](http://nodejs.org/api/stream.html#stream_class_stream_writable_1).",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "- A hash of the config options",
                    "type": "Object"
                },
                {
                    "name": "logBridge",
                    "description": "- The log bridge that will emit events for each log entry",
                    "type": "Log"
                }
            ]
        },
        "jQueryXhr": {
            "name": "jQueryXhr",
            "shortname": "jQueryXhr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/transports/jquery_xhr.js",
            "line": 1,
            "description": "Transport class for making HTTP requests using jQuery's ajax methods",
            "is_constructor": 1
        },
        "NodeHttp": {
            "name": "NodeHttp",
            "shortname": "NodeHttp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/transports/node_http.js",
            "line": 5,
            "description": "Http transport to use in Node.js"
        },
        "ConnectionPool": {
            "name": "ConnectionPool",
            "shortname": "ConnectionPool",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/connection_pool.js",
            "line": 1,
            "description": "Manager of connections to a node(s), capable of ensuring that connections are clear and living\nbefore providing them to the application",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "- an object describing the configuration for the ConnectionPool",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ]
        },
        "Log": {
            "name": "Log",
            "shortname": "Log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/log.js",
            "line": 4,
            "description": "Log bridge, which is an [EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter)\nthat sends events to one or more outputs/loggers. Setup these loggers by\nspecifying their config as the first argument, or by passing it to addOutput().",
            "uses": [
                "Loggers.Stdio"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "output",
                    "description": "- Either the level to setup a single logger, a\n  full config object for alogger, or an array of config objects to use for creating log outputs.",
                    "type": "String|Object|ArrayOfStrings|ArrayOfObjects",
                    "props": [
                        {
                            "name": "level",
                            "description": "- One of the keys in Log.levels (error, warning, etc.)",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "- The name of the logger to use for this output",
                            "type": "String"
                        }
                    ]
                }
            ]
        },
        "Transport": {
            "name": "Transport",
            "shortname": "Transport",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/transport.js",
            "line": 21,
            "description": "\"Abstract\" class responsible for managing connection pools, sniffing for nodes, and serializing/\ndeserializing requests and ES errors.",
            "mainName": "Transport",
            "tag": "main",
            "itemtype": "main",
            "_main": true,
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "- An object with configuration parameters",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}",
                    "props": [
                        {
                            "name": "hosts",
                            "description": "- Host(s) that this client should communicate with.",
                            "type": "String|ArrayOfStrings",
                            "optional": true,
                            "optdefault": "'localhost:9200'"
                        },
                        {
                            "name": "sniff_on_start",
                            "description": "- inspect the cluster for a list of nodes upon startup",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "sniff_after_requests",
                            "description": "- Sniff after completing a certain number of request (disabled by default)",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "sniff_on_connection_fail",
                            "description": "- Sniff after a connection fails (disabled by default)",
                            "type": "Boolean",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "max_retries",
                            "description": "- The maximum number of time the client should retry connecting to a node",
                            "type": "Number",
                            "optional": true,
                            "optdefault": "3"
                        }
                    ]
                }
            ]
        },
        "utils": {
            "name": "utils",
            "shortname": "utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/lib/utils.js",
            "line": 7,
            "description": "Custom utils library, basically a modified version of [lodash](http://lodash.com/docs) +\n[node.uitls](http://nodejs.org/api/util.html#util_util) that doesn't use mixins to prevent\nconfusion when requiring lodash itself.",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "src/api/cluster/get_settings.js",
            "line": 5,
            "description": "Perform an elasticsearch [cluster.get_settings](http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/) request",
            "itemtype": "method",
            "name": "cluster.get_settings",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/health.js",
            "line": 8,
            "description": "Perform an elasticsearch [cluster.health](http://elasticsearch.org/guide/reference/api/admin-cluster-health/) request",
            "itemtype": "method",
            "name": "cluster.health",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "level",
                            "description": "- Specify the level of detail for returned information",
                            "type": "String",
                            "optional": true,
                            "optdefault": "cluster"
                        },
                        {
                            "name": "local",
                            "description": "- Return local information, do not retrieve the state from master node (default: false)",
                            "type": "Boolean"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Explicit operation timeout for connection to master node",
                            "type": "Date|Number"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "wait_for_active_shards",
                            "description": "- Wait until the specified number of shards is active",
                            "type": "Number"
                        },
                        {
                            "name": "wait_for_nodes",
                            "description": "- Wait until the specified number of nodes is available",
                            "type": "Number"
                        },
                        {
                            "name": "wait_for_relocating_shards",
                            "description": "- Wait until the specified number of relocating shards is finished",
                            "type": "Number"
                        },
                        {
                            "name": "wait_for_status",
                            "description": "- Wait until cluster is in a specific state",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/node_hot_threads.js",
            "line": 7,
            "description": "Perform an elasticsearch [cluster.node_hot_threads](http://www.elasticsearch.org/guide/reference/api/admin-cluster-nodes-hot-threads/) request",
            "itemtype": "method",
            "name": "cluster.node_hot_threads",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "interval",
                            "description": "- The interval for the second sampling of threads",
                            "type": "Date|Number"
                        },
                        {
                            "name": "snapshots",
                            "description": "- Number of samples of thread stacktrace (default: 10)",
                            "type": "Number"
                        },
                        {
                            "name": "threads",
                            "description": "- Specify the number of threads to provide information for (default: 3)",
                            "type": "Number"
                        },
                        {
                            "name": "type",
                            "description": "- The type to sample (default: cpu)",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/node_info.js",
            "line": 6,
            "description": "Perform an elasticsearch [cluster.node_info](http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-info/) request",
            "itemtype": "method",
            "name": "cluster.node_info",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "all",
                            "description": "- Return all available information",
                            "type": "Boolean"
                        },
                        {
                            "name": "clear",
                            "description": "- Reset the default settings",
                            "type": "Boolean"
                        },
                        {
                            "name": "http",
                            "description": "- Return information about HTTP",
                            "type": "Boolean"
                        },
                        {
                            "name": "jvm",
                            "description": "- Return information about the JVM",
                            "type": "Boolean"
                        },
                        {
                            "name": "network",
                            "description": "- Return information about network",
                            "type": "Boolean"
                        },
                        {
                            "name": "os",
                            "description": "- Return information about the operating system",
                            "type": "Boolean"
                        },
                        {
                            "name": "plugin",
                            "description": "- Return information about plugins",
                            "type": "Boolean"
                        },
                        {
                            "name": "process",
                            "description": "- Return information about the Elasticsearch process",
                            "type": "Boolean"
                        },
                        {
                            "name": "settings",
                            "description": "- Return information about node settings",
                            "type": "Boolean"
                        },
                        {
                            "name": "thread_pool",
                            "description": "- Return information about the thread pool",
                            "type": "Boolean"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "transport",
                            "description": "- Return information about transport",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/node_shutdown.js",
            "line": 5,
            "description": "Perform an elasticsearch [cluster.node_shutdown](http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-shutdown/) request",
            "itemtype": "method",
            "name": "cluster.node_shutdown",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "delay",
                            "description": "- Set the delay for the operation (default: 1s)",
                            "type": "Date|Number"
                        },
                        {
                            "name": "exit",
                            "description": "- Exit the JVM as well (default: true)",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/node_stats.js",
            "line": 8,
            "description": "Perform an elasticsearch [cluster.node_stats](http://elasticsearch.org/guide/reference/api/admin-cluster-nodes-stats/) request",
            "itemtype": "method",
            "name": "cluster.node_stats",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "all",
                            "description": "- Return all available information",
                            "type": "Boolean"
                        },
                        {
                            "name": "clear",
                            "description": "- Reset the default level of detail",
                            "type": "Boolean"
                        },
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields for `fielddata` metric (supports wildcards)",
                            "type": "List"
                        },
                        {
                            "name": "fs",
                            "description": "- Return information about the filesystem",
                            "type": "Boolean"
                        },
                        {
                            "name": "http",
                            "description": "- Return information about HTTP",
                            "type": "Boolean"
                        },
                        {
                            "name": "indices",
                            "description": "- Return information about indices",
                            "type": "Boolean"
                        },
                        {
                            "name": "jvm",
                            "description": "- Return information about the JVM",
                            "type": "Boolean"
                        },
                        {
                            "name": "network",
                            "description": "- Return information about network",
                            "type": "Boolean"
                        },
                        {
                            "name": "os",
                            "description": "- Return information about the operating system",
                            "type": "Boolean"
                        },
                        {
                            "name": "process",
                            "description": "- Return information about the Elasticsearch process",
                            "type": "Boolean"
                        },
                        {
                            "name": "thread_pool",
                            "description": "- Return information about the thread pool",
                            "type": "Boolean"
                        },
                        {
                            "name": "transport",
                            "description": "- Return information about transport",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/put_settings.js",
            "line": 5,
            "description": "Perform an elasticsearch [cluster.put_settings](http://elasticsearch.org/guide/reference/api/admin-cluster-update-settings/) request",
            "itemtype": "method",
            "name": "cluster.put_settings",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/reroute.js",
            "line": 5,
            "description": "Perform an elasticsearch [cluster.reroute](http://elasticsearch.org/guide/reference/api/admin-cluster-reroute/) request",
            "itemtype": "method",
            "name": "cluster.reroute",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "dry_run",
                            "description": "- Simulate the operation only and return the resulting state",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_metadata",
                            "description": "- Don't return cluster state metadata (default: false)",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/cluster/state.js",
            "line": 5,
            "description": "Perform an elasticsearch [cluster.state](http://elasticsearch.org/guide/reference/api/admin-cluster-state/) request",
            "itemtype": "method",
            "name": "cluster.state",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "filter_blocks",
                            "description": "- Do not return information about blocks",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_index_templates",
                            "description": "- Do not return information about index templates",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_indices",
                            "description": "- Limit returned metadata information to specific indices",
                            "type": "List"
                        },
                        {
                            "name": "filter_metadata",
                            "description": "- Do not return information about indices metadata",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_nodes",
                            "description": "- Do not return information about nodes",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_routing_table",
                            "description": "- Do not return information about shard allocation (`routing_table` and `routing_nodes`)",
                            "type": "Boolean"
                        },
                        {
                            "name": "local",
                            "description": "- Return local information, do not retrieve the state from master node (default: false)",
                            "type": "Boolean"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/analyze.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.analyze](http://www.elasticsearch.org/guide/reference/api/admin-indices-analyze/) request",
            "itemtype": "method",
            "name": "indices.analyze",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "analyzer",
                            "description": "- The name of the analyzer to use",
                            "type": "String"
                        },
                        {
                            "name": "field",
                            "description": "- Use the analyzer configured for this field (instead of passing the analyzer name)",
                            "type": "String"
                        },
                        {
                            "name": "filters",
                            "description": "- A comma-separated list of filters to use for the analysis",
                            "type": "List"
                        },
                        {
                            "name": "index",
                            "description": "- The name of the index to scope the operation",
                            "type": "String"
                        },
                        {
                            "name": "prefer_local",
                            "description": "- With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)",
                            "type": "Boolean"
                        },
                        {
                            "name": "text",
                            "description": "- The text on which the analysis should be performed (when request body is not used)",
                            "type": "String"
                        },
                        {
                            "name": "tokenizer",
                            "description": "- The name of the tokenizer to use for the analysis",
                            "type": "String"
                        },
                        {
                            "name": "format",
                            "description": "- Format of the output",
                            "type": "String",
                            "optional": true,
                            "optdefault": "detailed"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/clear_cache.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.clear_cache](http://www.elasticsearch.org/guide/reference/api/admin-indices-clearcache/) request",
            "itemtype": "method",
            "name": "indices.clear_cache",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "field_data",
                            "description": "- Clear field data",
                            "type": "Boolean"
                        },
                        {
                            "name": "fielddata",
                            "description": "- Clear field data",
                            "type": "Boolean"
                        },
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields to clear when using the `field_data` parameter (default: all)",
                            "type": "List"
                        },
                        {
                            "name": "filter",
                            "description": "- Clear filter caches",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_cache",
                            "description": "- Clear filter caches",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_keys",
                            "description": "- A comma-separated list of keys to clear when using the `filter_cache` parameter (default: all)",
                            "type": "Boolean"
                        },
                        {
                            "name": "id",
                            "description": "- Clear ID caches for parent/child",
                            "type": "Boolean"
                        },
                        {
                            "name": "id_cache",
                            "description": "- Clear ID caches for parent/child",
                            "type": "Boolean"
                        },
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "index",
                            "description": "- A comma-separated list of index name to limit the operation",
                            "type": "List"
                        },
                        {
                            "name": "recycler",
                            "description": "- Clear the recycler cache",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/close.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.close](http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/) request",
            "itemtype": "method",
            "name": "indices.close",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/create.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.create](http://www.elasticsearch.org/guide/reference/api/admin-indices-create-index/) request",
            "itemtype": "method",
            "name": "indices.create",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/delete.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.delete](http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-index/) request",
            "itemtype": "method",
            "name": "indices.delete",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/delete_alias.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.delete_alias](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/) request",
            "itemtype": "method",
            "name": "indices.delete_alias",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit timestamp for the document",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/delete_mapping.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.delete_mapping](http://www.elasticsearch.org/guide/reference/api/admin-indices-delete-mapping/) request",
            "itemtype": "method",
            "name": "indices.delete_mapping",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/delete_template.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.delete_template](http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/) request",
            "itemtype": "method",
            "name": "indices.delete_template",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/delete_warmer.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.delete_warmer](http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/) request",
            "itemtype": "method",
            "name": "indices.delete_warmer",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/exists.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.exists](http://www.elasticsearch.org/guide/reference/api/admin-indices-indices-exists/) request",
            "itemtype": "method",
            "name": "indices.exists",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/exists_alias.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.exists_alias](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/) request",
            "itemtype": "method",
            "name": "indices.exists_alias",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/exists_type.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.exists_type](http://www.elasticsearch.org/guide/reference/api/admin-indices-types-exists/) request",
            "itemtype": "method",
            "name": "indices.exists_type",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/flush.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.flush](http://www.elasticsearch.org/guide/reference/api/admin-indices-flush/) request",
            "itemtype": "method",
            "name": "indices.flush",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "force",
                            "description": "- TODO: ?",
                            "type": "Boolean"
                        },
                        {
                            "name": "full",
                            "description": "- TODO: ?",
                            "type": "Boolean"
                        },
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the index after performing the operation",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/get_alias.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.get_alias](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/) request",
            "itemtype": "method",
            "name": "indices.get_alias",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/get_aliases.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.get_aliases](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/) request",
            "itemtype": "method",
            "name": "indices.get_aliases",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/get_mapping.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.get_mapping](http://www.elasticsearch.org/guide/reference/api/admin-indices-get-mapping/) request",
            "itemtype": "method",
            "name": "indices.get_mapping",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/get_settings.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.get_settings](http://www.elasticsearch.org/guide/reference/api/admin-indices-get-settings/) request",
            "itemtype": "method",
            "name": "indices.get_settings",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/get_template.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.get_template](http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/) request",
            "itemtype": "method",
            "name": "indices.get_template",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/get_warmer.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.get_warmer](http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/) request",
            "itemtype": "method",
            "name": "indices.get_warmer",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/open.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.open](http://www.elasticsearch.org/guide/reference/api/admin-indices-open-close/) request",
            "itemtype": "method",
            "name": "indices.open",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/optimize.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.optimize](http://www.elasticsearch.org/guide/reference/api/admin-indices-optimize/) request",
            "itemtype": "method",
            "name": "indices.optimize",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "flush",
                            "description": "- Specify whether the index should be flushed after performing the operation (default: true)",
                            "type": "Boolean"
                        },
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "max_num_segments",
                            "description": "- The number of segments the index should be merged into (default: dynamic)",
                            "type": "Number"
                        },
                        {
                            "name": "only_expunge_deletes",
                            "description": "- Specify whether the operation should only expunge deleted documents",
                            "type": "Boolean"
                        },
                        {
                            "name": "operation_threading",
                            "description": "- TODO: ?",
                            "type": "*"
                        },
                        {
                            "name": "refresh",
                            "description": "- Specify whether the index should be refreshed after performing the operation (default: true)",
                            "type": "Boolean"
                        },
                        {
                            "name": "wait_for_merge",
                            "description": "- Specify whether the request should block until the merge process is finished (default: true)",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/put_alias.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.put_alias](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/) request",
            "itemtype": "method",
            "name": "indices.put_alias",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Explicit timestamp for the document",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/put_mapping.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.put_mapping](http://www.elasticsearch.org/guide/reference/api/admin-indices-put-mapping/) request",
            "itemtype": "method",
            "name": "indices.put_mapping",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_conflicts",
                            "description": "- Specify whether to ignore conflicts while updating the mapping (default: false)",
                            "type": "Boolean"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/put_settings.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.put_settings](http://www.elasticsearch.org/guide/reference/api/admin-indices-update-settings/) request",
            "itemtype": "method",
            "name": "indices.put_settings",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/put_template.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.put_template](http://www.elasticsearch.org/guide/reference/api/admin-indices-templates/) request",
            "itemtype": "method",
            "name": "indices.put_template",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "order",
                            "description": "- The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers)",
                            "type": "Number"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/put_warmer.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.put_warmer](http://www.elasticsearch.org/guide/reference/api/admin-indices-warmers/) request",
            "itemtype": "method",
            "name": "indices.put_warmer",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/refresh.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.refresh](http://www.elasticsearch.org/guide/reference/api/admin-indices-refresh/) request",
            "itemtype": "method",
            "name": "indices.refresh",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "operation_threading",
                            "description": "- TODO: ?",
                            "type": "*"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/segments.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.segments](http://elasticsearch.org/guide/reference/api/admin-indices-segments/) request",
            "itemtype": "method",
            "name": "indices.segments",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "operation_threading",
                            "description": "- TODO: ?",
                            "type": "*"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/snapshot_index.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.snapshot_index](http://www.elasticsearch.org/guide/reference/api/admin-indices-gateway-snapshot/) request",
            "itemtype": "method",
            "name": "indices.snapshot_index",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/stats.js",
            "line": 8,
            "description": "Perform an elasticsearch [indices.stats](http://elasticsearch.org/guide/reference/api/admin-indices-stats/) request",
            "itemtype": "method",
            "name": "indices.stats",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "all",
                            "description": "- Return all available information",
                            "type": "Boolean"
                        },
                        {
                            "name": "clear",
                            "description": "- Reset the default level of detail",
                            "type": "Boolean"
                        },
                        {
                            "name": "docs",
                            "description": "- Return information about indexed and deleted documents",
                            "type": "Boolean"
                        },
                        {
                            "name": "fielddata",
                            "description": "- Return information about field data",
                            "type": "Boolean"
                        },
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields for `fielddata` metric (supports wildcards)",
                            "type": "Boolean"
                        },
                        {
                            "name": "filter_cache",
                            "description": "- Return information about filter cache",
                            "type": "Boolean"
                        },
                        {
                            "name": "flush",
                            "description": "- Return information about flush operations",
                            "type": "Boolean"
                        },
                        {
                            "name": "get",
                            "description": "- Return information about get operations",
                            "type": "Boolean"
                        },
                        {
                            "name": "groups",
                            "description": "- A comma-separated list of search groups for `search` statistics",
                            "type": "Boolean"
                        },
                        {
                            "name": "id_cache",
                            "description": "- Return information about ID cache",
                            "type": "Boolean"
                        },
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "indexing",
                            "description": "- Return information about indexing operations",
                            "type": "Boolean"
                        },
                        {
                            "name": "merge",
                            "description": "- Return information about merge operations",
                            "type": "Boolean"
                        },
                        {
                            "name": "refresh",
                            "description": "- Return information about refresh operations",
                            "type": "Boolean"
                        },
                        {
                            "name": "search",
                            "description": "- Return information about search operations; use the `groups` parameter to include information for specific search groups",
                            "type": "Boolean"
                        },
                        {
                            "name": "store",
                            "description": "- Return information about the size of the index",
                            "type": "Boolean"
                        },
                        {
                            "name": "warmer",
                            "description": "- Return information about warmers",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/status.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.status](http://elasticsearch.org/guide/reference/api/admin-indices-status/) request",
            "itemtype": "method",
            "name": "indices.status",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "operation_threading",
                            "description": "- TODO: ?",
                            "type": "*"
                        },
                        {
                            "name": "recovery",
                            "description": "- Return information about shard recovery",
                            "type": "Boolean"
                        },
                        {
                            "name": "snapshot",
                            "description": "- TODO: ?",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/update_aliases.js",
            "line": 5,
            "description": "Perform an elasticsearch [indices.update_aliases](http://www.elasticsearch.org/guide/reference/api/admin-indices-aliases/) request",
            "itemtype": "method",
            "name": "indices.update_aliases",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "timeout",
                            "description": "- Request timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "master_timeout",
                            "description": "- Specify timeout for connection to master",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/indices/validate_query.js",
            "line": 7,
            "description": "Perform an elasticsearch [indices.validate_query](http://www.elasticsearch.org/guide/reference/api/validate/) request",
            "itemtype": "method",
            "name": "indices.validate_query",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "explain",
                            "description": "- Return detailed information about the error",
                            "type": "Boolean"
                        },
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "operation_threading",
                            "description": "- TODO: ?",
                            "type": "*"
                        },
                        {
                            "name": "source",
                            "description": "- The URL-encoded query definition (instead of using the request body)",
                            "type": "String"
                        },
                        {
                            "name": "q",
                            "description": "- Query in the Lucene query string syntax",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/bulk.js",
            "line": 8,
            "description": "Perform an elasticsearch [bulk](http://elasticsearch.org/guide/reference/api/bulk/) request",
            "itemtype": "method",
            "name": "bulk",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consistency",
                            "description": "- Explicit write consistency setting for the operation",
                            "type": "String"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the index after performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "replication",
                            "description": "- Explicitely set the replication type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "sync"
                        },
                        {
                            "name": "type",
                            "description": "- Default document type for items which don't provide one",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/count.js",
            "line": 7,
            "description": "Perform an elasticsearch [count](http://elasticsearch.org/guide/reference/api/count/) request",
            "itemtype": "method",
            "name": "count",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "min_score",
                            "description": "- Include only documents with a specific `_score` value in the result",
                            "type": "Number"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "source",
                            "description": "- The URL-encoded query definition (instead of using the request body)",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/create.js",
            "line": 9,
            "description": "Perform an elasticsearch [create](http://elasticsearch.org/guide/reference/api/index_/) request",
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consistency",
                            "description": "- Explicit write consistency setting for the operation",
                            "type": "String"
                        },
                        {
                            "name": "id",
                            "description": "- Specific document ID (when the POST method is used)",
                            "type": "String"
                        },
                        {
                            "name": "parent",
                            "description": "- ID of the parent document",
                            "type": "String"
                        },
                        {
                            "name": "percolate",
                            "description": "- Percolator queries to execute while indexing the document",
                            "type": "String"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the index after performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "replication",
                            "description": "- Specific replication type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "sync"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "timestamp",
                            "description": "- Explicit timestamp for the document",
                            "type": "Date|Number"
                        },
                        {
                            "name": "ttl",
                            "description": "- Expiration time for the document",
                            "type": "Duration"
                        },
                        {
                            "name": "version",
                            "description": "- Explicit version number for concurrency control",
                            "type": "Number"
                        },
                        {
                            "name": "version_type",
                            "description": "- Specific version type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/delete.js",
            "line": 9,
            "description": "Perform an elasticsearch [delete](http://elasticsearch.org/guide/reference/api/delete/) request",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consistency",
                            "description": "- Specific write consistency setting for the operation",
                            "type": "String"
                        },
                        {
                            "name": "parent",
                            "description": "- ID of parent document",
                            "type": "String"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the index after performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "replication",
                            "description": "- Specific replication type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "sync"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "version",
                            "description": "- Explicit version number for concurrency control",
                            "type": "Number"
                        },
                        {
                            "name": "version_type",
                            "description": "- Specific version type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/delete_by_query.js",
            "line": 10,
            "description": "Perform an elasticsearch [delete_by_query](http://www.elasticsearch.org/guide/reference/api/delete-by-query/) request",
            "itemtype": "method",
            "name": "delete_by_query",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "analyzer",
                            "description": "- The analyzer to use for the query string",
                            "type": "String"
                        },
                        {
                            "name": "consistency",
                            "description": "- Specific write consistency setting for the operation",
                            "type": "String"
                        },
                        {
                            "name": "default_operator",
                            "description": "- The default operator for query string query (AND or OR)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "OR"
                        },
                        {
                            "name": "df",
                            "description": "- The field to use as default where no field prefix is given in the query string",
                            "type": "String"
                        },
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "replication",
                            "description": "- Specific replication type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "sync"
                        },
                        {
                            "name": "q",
                            "description": "- Query in the Lucene query string syntax",
                            "type": "String"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "source",
                            "description": "- The URL-encoded query definition (instead of using the request body)",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/exists.js",
            "line": 5,
            "description": "Perform an elasticsearch [exists](http://elasticsearch.org/guide/reference/api/get/) request",
            "itemtype": "method",
            "name": "exists",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parent",
                            "description": "- The ID of the parent document",
                            "type": "String"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "realtime",
                            "description": "- Specify whether to perform the operation in realtime or search mode",
                            "type": "Boolean"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the shard containing the document before performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/explain.js",
            "line": 7,
            "description": "Perform an elasticsearch [explain](http://elasticsearch.org/guide/reference/api/explain/) request",
            "itemtype": "method",
            "name": "explain",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "analyze_wildcard",
                            "description": "- Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)",
                            "type": "Boolean"
                        },
                        {
                            "name": "analyzer",
                            "description": "- The analyzer for the query string query",
                            "type": "String"
                        },
                        {
                            "name": "default_operator",
                            "description": "- The default operator for query string query (AND or OR)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "OR"
                        },
                        {
                            "name": "df",
                            "description": "- The default field for query string query (default: _all)",
                            "type": "String"
                        },
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields to return in the response",
                            "type": "List"
                        },
                        {
                            "name": "lenient",
                            "description": "- Specify whether format-based query failures (such as providing text to a numeric field) should be ignored",
                            "type": "Boolean"
                        },
                        {
                            "name": "lowercase_expanded_terms",
                            "description": "- Specify whether query terms should be lowercased",
                            "type": "Boolean"
                        },
                        {
                            "name": "parent",
                            "description": "- The ID of the parent document",
                            "type": "String"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "q",
                            "description": "- Query in the Lucene query string syntax",
                            "type": "String"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "source",
                            "description": "- The URL-encoded query definition (instead of using the request body)",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/get.js",
            "line": 5,
            "description": "Perform an elasticsearch [get](http://elasticsearch.org/guide/reference/api/get/) request",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields to return in the response",
                            "type": "List"
                        },
                        {
                            "name": "parent",
                            "description": "- The ID of the parent document",
                            "type": "String"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "realtime",
                            "description": "- Specify whether to perform the operation in realtime or search mode",
                            "type": "Boolean"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the shard containing the document before performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/get_source.js",
            "line": 5,
            "description": "Perform an elasticsearch [get_source](http://elasticsearch.org/guide/reference/api/get/) request",
            "itemtype": "method",
            "name": "get_source",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "parent",
                            "description": "- The ID of the parent document",
                            "type": "String"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "realtime",
                            "description": "- Specify whether to perform the operation in realtime or search mode",
                            "type": "Boolean"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the shard containing the document before performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/index.js",
            "line": 10,
            "description": "Perform an elasticsearch [index](http://elasticsearch.org/guide/reference/api/index_/) request",
            "itemtype": "method",
            "name": "index",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consistency",
                            "description": "- Explicit write consistency setting for the operation",
                            "type": "String"
                        },
                        {
                            "name": "op_type",
                            "description": "- Explicit operation type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "index"
                        },
                        {
                            "name": "parent",
                            "description": "- ID of the parent document",
                            "type": "String"
                        },
                        {
                            "name": "percolate",
                            "description": "- Percolator queries to execute while indexing the document",
                            "type": "String"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the index after performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "replication",
                            "description": "- Specific replication type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "sync"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "timestamp",
                            "description": "- Explicit timestamp for the document",
                            "type": "Date|Number"
                        },
                        {
                            "name": "ttl",
                            "description": "- Expiration time for the document",
                            "type": "Duration"
                        },
                        {
                            "name": "version",
                            "description": "- Explicit version number for concurrency control",
                            "type": "Number"
                        },
                        {
                            "name": "version_type",
                            "description": "- Specific version type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/info.js",
            "line": 5,
            "description": "Perform an elasticsearch [info](http://elasticsearch.org/guide/) request",
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object"
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/mget.js",
            "line": 5,
            "description": "Perform an elasticsearch [mget](http://elasticsearch.org/guide/reference/api/multi-get/) request",
            "itemtype": "method",
            "name": "mget",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields to return in the response",
                            "type": "List"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "realtime",
                            "description": "- Specify whether to perform the operation in realtime or search mode",
                            "type": "Boolean"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the shard containing the document before performing the operation",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/mlt.js",
            "line": 5,
            "description": "Perform an elasticsearch [mlt](http://elasticsearch.org/guide/reference/api/more-like-this/) request",
            "itemtype": "method",
            "name": "mlt",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "boost_terms",
                            "description": "- The boost factor",
                            "type": "Number"
                        },
                        {
                            "name": "max_doc_freq",
                            "description": "- The word occurrence frequency as count: words with higher occurrence in the corpus will be ignored",
                            "type": "Number"
                        },
                        {
                            "name": "max_query_terms",
                            "description": "- The maximum query terms to be included in the generated query",
                            "type": "Number"
                        },
                        {
                            "name": "max_word_len",
                            "description": "- The minimum length of the word: longer words will be ignored",
                            "type": "Number"
                        },
                        {
                            "name": "min_doc_freq",
                            "description": "- The word occurrence frequency as count: words with lower occurrence in the corpus will be ignored",
                            "type": "Number"
                        },
                        {
                            "name": "min_term_freq",
                            "description": "- The term frequency as percent: terms with lower occurence in the source document will be ignored",
                            "type": "Number"
                        },
                        {
                            "name": "min_word_len",
                            "description": "- The minimum length of the word: shorter words will be ignored",
                            "type": "Number"
                        },
                        {
                            "name": "mlt_fields",
                            "description": "- Specific fields to perform the query against",
                            "type": "List"
                        },
                        {
                            "name": "percent_terms_to_match",
                            "description": "- How many terms have to match in order to consider the document a match (default: 0.3)",
                            "type": "Number"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "search_from",
                            "description": "- The offset from which to return results",
                            "type": "Number"
                        },
                        {
                            "name": "search_indices",
                            "description": "- A comma-separated list of indices to perform the query against (default: the index containing the document)",
                            "type": "List"
                        },
                        {
                            "name": "search_query_hint",
                            "description": "- The search query hint",
                            "type": "String"
                        },
                        {
                            "name": "search_scroll",
                            "description": "- A scroll search request definition",
                            "type": "String"
                        },
                        {
                            "name": "search_size",
                            "description": "- The number of documents to return (default: 10)",
                            "type": "Number"
                        },
                        {
                            "name": "search_source",
                            "description": "- A specific search request definition (instead of using the request body)",
                            "type": "String"
                        },
                        {
                            "name": "search_type",
                            "description": "- Specific search type (eg. `dfs_then_fetch`, `count`, etc)",
                            "type": "String"
                        },
                        {
                            "name": "search_types",
                            "description": "- A comma-separated list of types to perform the query against (default: the same type as the document)",
                            "type": "List"
                        },
                        {
                            "name": "stop_words",
                            "description": "- A list of stop words to be ignored",
                            "type": "List"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/msearch.js",
            "line": 7,
            "description": "Perform an elasticsearch [msearch](http://www.elasticsearch.org/guide/reference/api/multi-search/) request",
            "itemtype": "method",
            "name": "msearch",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "search_type",
                            "description": "- Search operation type",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/percolate.js",
            "line": 5,
            "description": "Perform an elasticsearch [percolate](http://elasticsearch.org/guide/reference/api/percolate/) request",
            "itemtype": "method",
            "name": "percolate",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "prefer_local",
                            "description": "- With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/scroll.js",
            "line": 5,
            "description": "Perform an elasticsearch [scroll](http://www.elasticsearch.org/guide/reference/api/search/scroll/) request",
            "itemtype": "method",
            "name": "scroll",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "scroll",
                            "description": "- Specify how long a consistent view of the index should be maintained for scrolled search",
                            "type": "Duration"
                        },
                        {
                            "name": "scroll_id",
                            "description": "- The scroll ID for scrolled search",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/search.js",
            "line": 10,
            "description": "Perform an elasticsearch [search](http://www.elasticsearch.org/guide/reference/api/search/) request",
            "itemtype": "method",
            "name": "search",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "analyzer",
                            "description": "- The analyzer to use for the query string",
                            "type": "String"
                        },
                        {
                            "name": "analyze_wildcard",
                            "description": "- Specify whether wildcard and prefix queries should be analyzed (default: false)",
                            "type": "Boolean"
                        },
                        {
                            "name": "default_operator",
                            "description": "- The default operator for query string query (AND or OR)",
                            "type": "String",
                            "optional": true,
                            "optdefault": "OR"
                        },
                        {
                            "name": "df",
                            "description": "- The field to use as default where no field prefix is given in the query string",
                            "type": "String"
                        },
                        {
                            "name": "explain",
                            "description": "- Specify whether to return detailed information about score computation as part of a hit",
                            "type": "Boolean"
                        },
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields to return as part of a hit",
                            "type": "List"
                        },
                        {
                            "name": "from",
                            "description": "- Starting offset (default: 0)",
                            "type": "Number"
                        },
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "indices_boost",
                            "description": "- Comma-separated list of index boosts",
                            "type": "List"
                        },
                        {
                            "name": "lenient",
                            "description": "- Specify whether format-based query failures (such as providing text to a numeric field) should be ignored",
                            "type": "Boolean"
                        },
                        {
                            "name": "lowercase_expanded_terms",
                            "description": "- Specify whether query terms should be lowercased",
                            "type": "Boolean"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "q",
                            "description": "- Query in the Lucene query string syntax",
                            "type": "String"
                        },
                        {
                            "name": "routing",
                            "description": "- A comma-separated list of specific routing values",
                            "type": "List"
                        },
                        {
                            "name": "scroll",
                            "description": "- Specify how long a consistent view of the index should be maintained for scrolled search",
                            "type": "Duration"
                        },
                        {
                            "name": "search_type",
                            "description": "- Search operation type",
                            "type": "String"
                        },
                        {
                            "name": "size",
                            "description": "- Number of hits to return (default: 10)",
                            "type": "Number"
                        },
                        {
                            "name": "sort",
                            "description": "- A comma-separated list of <field>:<direction> pairs",
                            "type": "List"
                        },
                        {
                            "name": "source",
                            "description": "- The URL-encoded request definition using the Query DSL (instead of using request body)",
                            "type": "String"
                        },
                        {
                            "name": "stats",
                            "description": "- Specific 'tag' of the request for logging and statistical purposes",
                            "type": "List"
                        },
                        {
                            "name": "suggest_field",
                            "description": "- Specify which field to use for suggestions",
                            "type": "String"
                        },
                        {
                            "name": "suggest_mode",
                            "description": "- Specify suggest mode",
                            "type": "String",
                            "optional": true,
                            "optdefault": "missing"
                        },
                        {
                            "name": "suggest_size",
                            "description": "- How many suggestions to return in response",
                            "type": "Number"
                        },
                        {
                            "name": "suggest_text",
                            "description": "- The source text for which the suggestions should be returned",
                            "type": "Text"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "version",
                            "description": "- Specify whether to return document version as part of a hit",
                            "type": "Boolean"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/suggest.js",
            "line": 7,
            "description": "Perform an elasticsearch [suggest](http://elasticsearch.org/guide/reference/api/search/suggest/) request",
            "itemtype": "method",
            "name": "suggest",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ignore_indices",
                            "description": "- When performed on multiple indices, allows to ignore `missing` ones",
                            "type": "String",
                            "optional": true,
                            "optdefault": "none"
                        },
                        {
                            "name": "preference",
                            "description": "- Specify the node or shard the operation should be performed on (default: random)",
                            "type": "String"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "source",
                            "description": "- The URL-encoded request definition (instead of using request body)",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/api/update.js",
            "line": 8,
            "description": "Perform an elasticsearch [update](http://elasticsearch.org/guide/reference/api/update/) request",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "params",
                    "description": "- An object with parameters used to carry out this action",
                    "type": "Object",
                    "props": [
                        {
                            "name": "consistency",
                            "description": "- Explicit write consistency setting for the operation",
                            "type": "String"
                        },
                        {
                            "name": "fields",
                            "description": "- A comma-separated list of fields to return in the response",
                            "type": "List"
                        },
                        {
                            "name": "lang",
                            "description": "- The script language (default: mvel)",
                            "type": "String"
                        },
                        {
                            "name": "parent",
                            "description": "- ID of the parent document",
                            "type": "String"
                        },
                        {
                            "name": "percolate",
                            "description": "- Perform percolation during the operation; use specific registered query name, attribute, or wildcard",
                            "type": "String"
                        },
                        {
                            "name": "refresh",
                            "description": "- Refresh the index after performing the operation",
                            "type": "Boolean"
                        },
                        {
                            "name": "replication",
                            "description": "- Specific replication type",
                            "type": "String",
                            "optional": true,
                            "optdefault": "sync"
                        },
                        {
                            "name": "retry_on_conflict",
                            "description": "- Specify how many times should the operation be retried when a conflict occurs (default: 0)",
                            "type": "Number"
                        },
                        {
                            "name": "routing",
                            "description": "- Specific routing value",
                            "type": "String"
                        },
                        {
                            "name": "script",
                            "description": "- The URL-encoded script definition (instead of using request body)",
                            "type": "*"
                        },
                        {
                            "name": "timeout",
                            "description": "- Explicit operation timeout",
                            "type": "Date|Number"
                        },
                        {
                            "name": "timestamp",
                            "description": "- Explicit timestamp for the document",
                            "type": "Date|Number"
                        },
                        {
                            "name": "ttl",
                            "description": "- Expiration time for the document",
                            "type": "Duration"
                        },
                        {
                            "name": "version",
                            "description": "- Explicit version number for concurrency control",
                            "type": "Number"
                        },
                        {
                            "name": "version_type",
                            "description": "- Explicit version number for concurrency control",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "Client"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 34,
            "description": "Clear the current event listeners and then re-listen for events based on the level specified",
            "itemtype": "method",
            "name": "setupListeners",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "level",
                    "description": "- The max log level that this logger should listen to",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 52,
            "description": "Clear the current event listeners",
            "itemtype": "method",
            "name": "cleanUpListeners",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 65,
            "description": "Sends output to a stream, does some formatting first",
            "itemtype": "method",
            "name": "write",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "to",
                    "description": "- The stream that should receive this message",
                    "type": "WriteableStream"
                },
                {
                    "name": "label",
                    "description": "- The text that should be used at the begining of the message",
                    "type": "String"
                },
                {
                    "name": "colorize",
                    "description": "- A function that recieves a string and returned a colored version of it",
                    "type": "Function"
                },
                {
                    "name": "what",
                    "description": "- The message to log",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 83,
            "description": "Handler for the bridges \"error\" event",
            "itemtype": "method",
            "name": "onError",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "e",
                    "description": "- The Error object to log",
                    "type": "Error"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 95,
            "description": "Handler for the bridges \"warning\" event",
            "itemtype": "method",
            "name": "onWarning",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "msg",
                    "description": "- The message to be logged",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 107,
            "description": "Handler for the bridges \"info\" event",
            "itemtype": "method",
            "name": "onInfo",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "msg",
                    "description": "- The message to be logged",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 119,
            "description": "Handler for the bridges \"debug\" event",
            "itemtype": "method",
            "name": "onDebug",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "msg",
                    "description": "- The message to be logged",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/loggers/stdio.js",
            "line": 131,
            "description": "Handler for the bridges \"trace\" event",
            "itemtype": "method",
            "name": "onTrace",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "msg",
                    "description": "- The message to be logged",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Loggers.Stdio"
        },
        {
            "file": "src/lib/client.js",
            "line": 46,
            "description": "Perform a request with the client's transport",
            "itemtype": "method",
            "name": "request",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "url",
                            "description": "- The url for the request",
                            "type": "String"
                        },
                        {
                            "name": "method",
                            "description": "- The HTTP method for the request",
                            "type": "String"
                        },
                        {
                            "name": "body",
                            "description": "- The body of the HTTP request",
                            "type": "String"
                        }
                    ]
                }
            ],
            "return": {
                "description": "- A promise that will be resolved with the response",
                "type": "Promise"
            },
            "class": "Client"
        },
        {
            "file": "src/lib/log.js",
            "line": 51,
            "description": "Levels observed by the loggers, ordered by rank",
            "itemtype": "property",
            "name": "levels",
            "type": "Array",
            "static": 1,
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 59,
            "description": "Event fired for error level log entries",
            "itemtype": "event",
            "name": "error",
            "params": [
                {
                    "name": "error",
                    "description": "- The error object to log",
                    "type": "Error"
                }
            ],
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 65,
            "description": "Event fired for \"warning\" level log entries, which usually represent things like\ncorrectly formatted error responses from ES (400, ...) and recoverable errors\n(one node unresponsive)",
            "itemtype": "event",
            "name": "warning",
            "params": [
                {
                    "name": "message",
                    "description": "- A message to be logged",
                    "type": "String"
                }
            ],
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 74,
            "description": "Event fired for \"info\" level log entries, which usually describe what a client is doing\n(sniffing etc)",
            "itemtype": "event",
            "name": "info",
            "params": [
                {
                    "name": "message",
                    "description": "- A message to be logged",
                    "type": "String"
                }
            ],
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 82,
            "description": "Event fired for \"debug\" level log entries, which will describe requests sent, including their\nurl (no data, response codes, or exec times)",
            "itemtype": "event",
            "name": "debug",
            "params": [
                {
                    "name": "message",
                    "description": "- A message to be logged",
                    "type": "String"
                }
            ],
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 90,
            "description": "Event fired for \"trace\" level log entries, which provide detailed information about each request\nmade from a client, including reponse codes, execution times, and a full curl command that can be\ncopied and pasted into a terminal",
            "itemtype": "event",
            "name": "trace",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "status",
                            "description": "- the HTTP response code from the request",
                            "type": "Number"
                        },
                        {
                            "name": "url",
                            "description": "- The URL from the request",
                            "type": "String"
                        },
                        {
                            "name": "request_body",
                            "description": "- The body of the request",
                            "type": "String"
                        },
                        {
                            "name": "response_body",
                            "description": "- The body of the response",
                            "type": "String"
                        }
                    ]
                }
            ],
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 105,
            "description": "Converts a log config value (string or array) to an array of level names which it represents",
            "itemtype": "method",
            "name": "parseLevels",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "input",
                    "description": "- Cound be a string to specify the max level, or an array of exact levels",
                    "type": "String|ArrayOfStrings"
                }
            ],
            "return": {
                "description": "-",
                "type": "Array"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 123,
            "description": "Combine the array-like param into a simple string",
            "itemtype": "method",
            "name": "join",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "arrayish",
                    "description": "- An array like object that can be itterated by _.each",
                    "type": "*"
                }
            ],
            "return": {
                "description": "- The final string.",
                "type": "String"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 142,
            "description": "Create a new logger, based on the config.",
            "itemtype": "method",
            "name": "addOutput",
            "params": [
                {
                    "name": "config",
                    "description": "- An object with config options for the logger.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "type",
                            "description": "- The name of an output/logger. Options can be found in the\n  `src/loggers` directory.",
                            "type": "String",
                            "optional": true,
                            "optdefault": "stdio"
                        },
                        {
                            "name": "levels",
                            "description": "- The levels to output to this logger, when an\n  array is specified no levels other than the ones specified will be listened to. When a string is\n  specified, that and all lower levels will be logged.",
                            "type": "String|ArrayOfStrings",
                            "optional": true,
                            "optdefault": "warning"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Logger"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 164,
            "description": "Log an error",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "error",
                    "description": "The Error to log",
                    "type": "Error|String"
                }
            ],
            "return": {
                "description": "- True if any outputs accepted the message",
                "type": "Boolean"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 178,
            "description": "Log a warning message",
            "itemtype": "method",
            "name": "warning",
            "params": [
                {
                    "name": "msg",
                    "description": "- Any amount of messages that will be joined before logged",
                    "type": "*",
                    "multiple": true
                }
            ],
            "return": {
                "description": "- True if any outputs accepted the message",
                "type": "Boolean"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 192,
            "description": "Log useful info about what's going on",
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "msg",
                    "description": "- Any amount of messages that will be joined before logged",
                    "type": "*",
                    "multiple": true
                }
            ],
            "return": {
                "description": "- True if any outputs accepted the message",
                "type": "Boolean"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 205,
            "description": "Log a debug level message",
            "itemtype": "method",
            "name": "debug",
            "params": [
                {
                    "name": "msg",
                    "description": "- Any amount of messages that will be joined before logged",
                    "type": "*",
                    "multiple": true
                }
            ],
            "return": {
                "description": "- True if any outputs accepted the message",
                "type": "Boolean"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 218,
            "description": "Log a trace level message",
            "itemtype": "method",
            "name": "trace",
            "params": [
                {
                    "name": "msg",
                    "description": "- Any amount of messages that will be joined before logged",
                    "type": "*",
                    "multiple": true
                }
            ],
            "return": {
                "description": "- True if any outputs accepted the message",
                "type": "Boolean"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/log.js",
            "line": 231,
            "description": "Shortcut for formatting a response trace message, which won't go through the trouble of formatting\nthe message if nothing will be receiving the message.",
            "itemtype": "method",
            "name": "requestTrace",
            "params": [
                {
                    "name": "method",
                    "description": "- The HTTP method from the request",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "- The URL from the request",
                    "type": "String"
                },
                {
                    "name": "body",
                    "description": "- The JSON body from the request",
                    "type": "String"
                },
                {
                    "name": "responseStatus",
                    "description": "- The HTTP response's status code",
                    "type": "String"
                },
                {
                    "name": "responseBody",
                    "description": "- The HTTP response's body",
                    "type": "String"
                }
            ],
            "return": {
                "description": "- True if any outputs accepted the message",
                "type": "Boolean"
            },
            "class": "Log"
        },
        {
            "file": "src/lib/transport.js",
            "line": 49,
            "description": "Modify the defaults for the Transport class",
            "itemtype": "method",
            "name": "defaults",
            "params": [
                {
                    "name": "update",
                    "description": "An object representing the changes to be made to the defaults.",
                    "type": "Object"
                }
            ],
            "static": 1,
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Transport"
        },
        {
            "file": "src/lib/utils.js",
            "line": 18,
            "description": "Link to [path.join](http://nodejs.org/api/path.html#path_path_join_path1_path2)",
            "itemtype": "method",
            "name": "utils.joinPath",
            "type": "{function}",
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 26,
            "description": "Extends lodash's map function so that objects can be passed to map and will be retuned as an object with\neach value transformed by the itterator.",
            "itemtype": "method",
            "name": "utils.map",
            "params": [
                {
                    "name": "Iterable",
                    "description": "obj - the thing to iterate over",
                    "optional": true
                },
                {
                    "name": "Function",
                    "description": "mapper - the function to call for each element in obj",
                    "optional": true
                },
                {
                    "name": "*",
                    "description": "context - the this context to use for each call to mapper",
                    "optional": true
                }
            ],
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 43,
            "description": "Require all of the modules in a directory",
            "itemtype": "method",
            "name": "requireDir",
            "params": [
                {
                    "name": "module",
                    "description": "- The module object which will own the required modules.",
                    "type": "Module"
                },
                {
                    "name": "path",
                    "description": "- Path to the directory which will be traversed (can be relative to module)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "- An object with each required file",
                "type": "Object"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 61,
            "description": "Test if a value is an array and it's contents are of a specific type",
            "itemtype": "method",
            "name": "isArrayOf<Strings|Objects|Arrays|Finites|Functions|RegExps>",
            "params": [
                {
                    "name": "arr",
                    "description": "- An array to check",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 80,
            "description": "Capitalize the first letter of a word",
            "todo": [
                "Tests"
            ],
            "itemtype": "method",
            "name": "ucfirst",
            "params": [
                {
                    "name": "word",
                    "description": "- The word to transform",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 92,
            "description": "Transform a string into StudlyCase",
            "todo": [
                "Tests"
            ],
            "itemtype": "method",
            "name": "studlyCase",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 106,
            "description": "Transfor a string into camelCase",
            "todo": [
                "Tests"
            ],
            "itemtype": "method",
            "name": "cameCase",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 124,
            "description": "Test if a value is \"numeric\" meaning that it can be transformed into something besides NaN",
            "todo": [
                "Test"
            ],
            "itemtype": "method",
            "name": "isNumeric",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 139,
            "description": "Test if a string represents an interval (eg. 1m, 2Y)",
            "todo": [
                "Test"
            ],
            "itemtype": "method",
            "name": "isInterval",
            "params": [
                {
                    "name": "val",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 151,
            "description": "Repeat a string n times",
            "todo": [
                "Test",
                "TestPerformance"
            ],
            "itemtype": "method",
            "name": "repeat",
            "params": [
                {
                    "name": "what",
                    "description": "- The string to repeat",
                    "type": "String"
                },
                {
                    "name": "times",
                    "description": "- Times the string should be repeated",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "utils"
        },
        {
            "file": "src/lib/utils.js",
            "line": 165,
            "description": "Convert an object into a query string",
            "itemtype": "method",
            "name": "makeQueryString",
            "params": [
                {
                    "name": "obj",
                    "description": "- The object to convert",
                    "type": "Object"
                },
                {
                    "name": "start",
                    "description": "- Should the query string start with a '?'",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "utils"
        }
    ],
    "warnings": []
}